{"ast":null,"code":"import { eachProp, is, toArray, isAnimatedString, Globals, getFluidValue, useLayoutEffect, each, raf, flush, FluidValue, deprecateInterpolate, callFluidObservers, frameLoop, hasFluidValue, flushCalls, isEqual, getFluidObservers, addFluidObserver, removeFluidObserver, noop, useMemoOne, deprecateDirectCall, useForceUpdate, usePrev, useOnce, createInterpolator, createStringInterpolator } from '@react-spring/shared';\nexport { Globals, createInterpolator } from '@react-spring/shared';\nimport * as React from 'react';\nimport { useContext, useMemo, useRef, useState } from 'react';\nimport { getAnimated, AnimatedValue, getPayload, AnimatedString, getAnimatedType, setAnimated } from '@react-spring/animated';\nexport * from '@react-spring/types/animated';\nexport * from '@react-spring/types/interpolation';\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction callProp(value, ...args) {\n  return is.fun(value) ? value(...args) : value;\n}\nconst matchProp = (value, key) => value === true || !!(key && value && (is.fun(value) ? value(key) : toArray(value).includes(key)));\nconst resolveProp = (prop, key) => is.obj(prop) ? key && prop[key] : prop;\nconst getDefaultProp = (props, key) => props.default === true ? props[key] : props.default ? props.default[key] : undefined;\nconst noopTransform = value => value;\nconst getDefaultProps = (props, transform = noopTransform) => {\n  let keys = DEFAULT_PROPS;\n  if (props.default && props.default !== true) {\n    props = props.default;\n    keys = Object.keys(props);\n  }\n  const defaults = {};\n  for (const key of keys) {\n    const value = transform(props[key], key);\n    if (!is.und(value)) {\n      defaults[key] = value;\n    }\n  }\n  return defaults;\n};\nconst DEFAULT_PROPS = ['config', 'onProps', 'onStart', 'onChange', 'onPause', 'onResume', 'onRest'];\nconst RESERVED_PROPS = {\n  config: 1,\n  from: 1,\n  to: 1,\n  ref: 1,\n  loop: 1,\n  reset: 1,\n  pause: 1,\n  cancel: 1,\n  reverse: 1,\n  immediate: 1,\n  default: 1,\n  delay: 1,\n  onProps: 1,\n  onStart: 1,\n  onChange: 1,\n  onPause: 1,\n  onResume: 1,\n  onRest: 1,\n  onResolve: 1,\n  items: 1,\n  trail: 1,\n  sort: 1,\n  expires: 1,\n  initial: 1,\n  enter: 1,\n  update: 1,\n  leave: 1,\n  children: 1,\n  onDestroyed: 1,\n  keys: 1,\n  callId: 1,\n  parentId: 1\n};\nfunction getForwardProps(props) {\n  const forward = {};\n  let count = 0;\n  eachProp(props, (value, prop) => {\n    if (!RESERVED_PROPS[prop]) {\n      forward[prop] = value;\n      count++;\n    }\n  });\n  if (count) {\n    return forward;\n  }\n}\nfunction inferTo(props) {\n  const to = getForwardProps(props);\n  if (to) {\n    const out = {\n      to\n    };\n    eachProp(props, (val, key) => key in to || (out[key] = val));\n    return out;\n  }\n  return _extends({}, props);\n}\nfunction computeGoal(value) {\n  value = getFluidValue(value);\n  return is.arr(value) ? value.map(computeGoal) : isAnimatedString(value) ? Globals.createStringInterpolator({\n    range: [0, 1],\n    output: [value, value]\n  })(1) : value;\n}\nfunction hasProps(props) {\n  for (const _ in props) return true;\n  return false;\n}\nfunction isAsyncTo(to) {\n  return is.fun(to) || is.arr(to) && is.obj(to[0]);\n}\nfunction detachRefs(ctrl, ref) {\n  var _ctrl$ref;\n  (_ctrl$ref = ctrl.ref) == null ? void 0 : _ctrl$ref.delete(ctrl);\n  ref == null ? void 0 : ref.delete(ctrl);\n}\nfunction replaceRef(ctrl, ref) {\n  if (ref && ctrl.ref !== ref) {\n    var _ctrl$ref2;\n    (_ctrl$ref2 = ctrl.ref) == null ? void 0 : _ctrl$ref2.delete(ctrl);\n    ref.add(ctrl);\n    ctrl.ref = ref;\n  }\n}\nfunction useChain(refs, timeSteps, timeFrame = 1000) {\n  useLayoutEffect(() => {\n    if (timeSteps) {\n      let prevDelay = 0;\n      each(refs, (ref, i) => {\n        const controllers = ref.current;\n        if (controllers.length) {\n          let delay = timeFrame * timeSteps[i];\n          if (isNaN(delay)) delay = prevDelay;else prevDelay = delay;\n          each(controllers, ctrl => {\n            each(ctrl.queue, props => {\n              const memoizedDelayProp = props.delay;\n              props.delay = key => delay + callProp(memoizedDelayProp || 0, key);\n            });\n            ctrl.start();\n          });\n        }\n      });\n    } else {\n      let p = Promise.resolve();\n      each(refs, ref => {\n        const controllers = ref.current;\n        if (controllers.length) {\n          const queues = controllers.map(ctrl => {\n            const q = ctrl.queue;\n            ctrl.queue = [];\n            return q;\n          });\n          p = p.then(() => {\n            each(controllers, (ctrl, i) => each(queues[i] || [], update => ctrl.queue.push(update)));\n            return Promise.all(ref.start());\n          });\n        }\n      });\n    }\n  });\n}\nconst config = {\n  default: {\n    tension: 170,\n    friction: 26\n  },\n  gentle: {\n    tension: 120,\n    friction: 14\n  },\n  wobbly: {\n    tension: 180,\n    friction: 12\n  },\n  stiff: {\n    tension: 210,\n    friction: 20\n  },\n  slow: {\n    tension: 280,\n    friction: 60\n  },\n  molasses: {\n    tension: 280,\n    friction: 120\n  }\n};\nconst linear = t => t;\nconst defaults = _extends({}, config.default, {\n  mass: 1,\n  damping: 1,\n  easing: linear,\n  clamp: false\n});\nclass AnimationConfig {\n  constructor() {\n    this.tension = void 0;\n    this.friction = void 0;\n    this.frequency = void 0;\n    this.damping = void 0;\n    this.mass = void 0;\n    this.velocity = 0;\n    this.restVelocity = void 0;\n    this.precision = void 0;\n    this.progress = void 0;\n    this.duration = void 0;\n    this.easing = void 0;\n    this.clamp = void 0;\n    this.bounce = void 0;\n    this.decay = void 0;\n    this.round = void 0;\n    Object.assign(this, defaults);\n  }\n}\nfunction mergeConfig(config, newConfig, defaultConfig) {\n  if (defaultConfig) {\n    defaultConfig = _extends({}, defaultConfig);\n    sanitizeConfig(defaultConfig, newConfig);\n    newConfig = _extends({}, defaultConfig, newConfig);\n  }\n  sanitizeConfig(config, newConfig);\n  Object.assign(config, newConfig);\n  for (const key in defaults) {\n    if (config[key] == null) {\n      config[key] = defaults[key];\n    }\n  }\n  let {\n    mass,\n    frequency,\n    damping\n  } = config;\n  if (!is.und(frequency)) {\n    if (frequency < 0.01) frequency = 0.01;\n    if (damping < 0) damping = 0;\n    config.tension = Math.pow(2 * Math.PI / frequency, 2) * mass;\n    config.friction = 4 * Math.PI * damping * mass / frequency;\n  }\n  return config;\n}\nfunction sanitizeConfig(config, props) {\n  if (!is.und(props.decay)) {\n    config.duration = undefined;\n  } else {\n    const isTensionConfig = !is.und(props.tension) || !is.und(props.friction);\n    if (isTensionConfig || !is.und(props.frequency) || !is.und(props.damping) || !is.und(props.mass)) {\n      config.duration = undefined;\n      config.decay = undefined;\n    }\n    if (isTensionConfig) {\n      config.frequency = undefined;\n    }\n  }\n}\nconst emptyArray = [];\nclass Animation {\n  constructor() {\n    this.changed = false;\n    this.values = emptyArray;\n    this.toValues = null;\n    this.fromValues = emptyArray;\n    this.to = void 0;\n    this.from = void 0;\n    this.config = new AnimationConfig();\n    this.immediate = false;\n  }\n}\nfunction scheduleProps(callId, {\n  key,\n  props,\n  defaultProps,\n  state,\n  actions\n}) {\n  return new Promise((resolve, reject) => {\n    var _props$cancel;\n    let delay;\n    let timeout;\n    let cancel = matchProp((_props$cancel = props.cancel) != null ? _props$cancel : defaultProps == null ? void 0 : defaultProps.cancel, key);\n    if (cancel) {\n      onStart();\n    } else {\n      if (!is.und(props.pause)) {\n        state.paused = matchProp(props.pause, key);\n      }\n      let pause = defaultProps == null ? void 0 : defaultProps.pause;\n      if (pause !== true) {\n        pause = state.paused || matchProp(pause, key);\n      }\n      delay = callProp(props.delay || 0, key);\n      if (pause) {\n        state.resumeQueue.add(onResume);\n        actions.pause();\n      } else {\n        actions.resume();\n        onResume();\n      }\n    }\n    function onPause() {\n      state.resumeQueue.add(onResume);\n      state.timeouts.delete(timeout);\n      timeout.cancel();\n      delay = timeout.time - raf.now();\n    }\n    function onResume() {\n      if (delay > 0) {\n        timeout = raf.setTimeout(onStart, delay);\n        state.pauseQueue.add(onPause);\n        state.timeouts.add(timeout);\n      } else {\n        onStart();\n      }\n    }\n    function onStart() {\n      state.pauseQueue.delete(onPause);\n      state.timeouts.delete(timeout);\n      if (callId <= (state.cancelId || 0)) {\n        cancel = true;\n      }\n      try {\n        actions.start(_extends({}, props, {\n          callId,\n          cancel\n        }), resolve);\n      } catch (err) {\n        reject(err);\n      }\n    }\n  });\n}\nconst getCombinedResult = (target, results) => results.length == 1 ? results[0] : results.some(result => result.cancelled) ? getCancelledResult(target.get()) : results.every(result => result.noop) ? getNoopResult(target.get()) : getFinishedResult(target.get(), results.every(result => result.finished));\nconst getNoopResult = value => ({\n  value,\n  noop: true,\n  finished: true,\n  cancelled: false\n});\nconst getFinishedResult = (value, finished, cancelled = false) => ({\n  value,\n  finished,\n  cancelled\n});\nconst getCancelledResult = value => ({\n  value,\n  cancelled: true,\n  finished: false\n});\nfunction runAsync(to, props, state, target) {\n  const {\n    callId,\n    parentId,\n    onRest\n  } = props;\n  const {\n    asyncTo: prevTo,\n    promise: prevPromise\n  } = state;\n  if (!parentId && to === prevTo && !props.reset) {\n    return prevPromise;\n  }\n  return state.promise = (async () => {\n    state.asyncId = callId;\n    state.asyncTo = to;\n    const defaultProps = getDefaultProps(props, (value, key) => key === 'onRest' ? undefined : value);\n    let preventBail;\n    let bail;\n    const bailPromise = new Promise((resolve, reject) => (preventBail = resolve, bail = reject));\n    const bailIfEnded = bailSignal => {\n      const bailResult = callId <= (state.cancelId || 0) && getCancelledResult(target) || callId !== state.asyncId && getFinishedResult(target, false);\n      if (bailResult) {\n        bailSignal.result = bailResult;\n        bail(bailSignal);\n        throw bailSignal;\n      }\n    };\n    const animate = (arg1, arg2) => {\n      const bailSignal = new BailSignal();\n      const skipAnimationSignal = new SkipAniamtionSignal();\n      return (async () => {\n        if (Globals.skipAnimation) {\n          stopAsync(state);\n          skipAnimationSignal.result = getFinishedResult(target, false);\n          bail(skipAnimationSignal);\n          throw skipAnimationSignal;\n        }\n        bailIfEnded(bailSignal);\n        const props = is.obj(arg1) ? _extends({}, arg1) : _extends({}, arg2, {\n          to: arg1\n        });\n        props.parentId = callId;\n        eachProp(defaultProps, (value, key) => {\n          if (is.und(props[key])) {\n            props[key] = value;\n          }\n        });\n        const result = await target.start(props);\n        bailIfEnded(bailSignal);\n        if (state.paused) {\n          await new Promise(resume => {\n            state.resumeQueue.add(resume);\n          });\n        }\n        return result;\n      })();\n    };\n    let result;\n    if (Globals.skipAnimation) {\n      stopAsync(state);\n      return getFinishedResult(target, false);\n    }\n    try {\n      let animating;\n      if (is.arr(to)) {\n        animating = (async queue => {\n          for (const props of queue) {\n            await animate(props);\n          }\n        })(to);\n      } else {\n        animating = Promise.resolve(to(animate, target.stop.bind(target)));\n      }\n      await Promise.all([animating.then(preventBail), bailPromise]);\n      result = getFinishedResult(target.get(), true, false);\n    } catch (err) {\n      if (err instanceof BailSignal) {\n        result = err.result;\n      } else if (err instanceof SkipAniamtionSignal) {\n        result = err.result;\n      } else {\n        throw err;\n      }\n    } finally {\n      if (callId == state.asyncId) {\n        state.asyncId = parentId;\n        state.asyncTo = parentId ? prevTo : undefined;\n        state.promise = parentId ? prevPromise : undefined;\n      }\n    }\n    if (is.fun(onRest)) {\n      raf.batchedUpdates(() => {\n        onRest(result, target, target.item);\n      });\n    }\n    return result;\n  })();\n}\nfunction stopAsync(state, cancelId) {\n  flush(state.timeouts, t => t.cancel());\n  state.pauseQueue.clear();\n  state.resumeQueue.clear();\n  state.asyncId = state.asyncTo = state.promise = undefined;\n  if (cancelId) state.cancelId = cancelId;\n}\nclass BailSignal extends Error {\n  constructor() {\n    super('An async animation has been interrupted. You see this error because you ' + 'forgot to use `await` or `.catch(...)` on its returned promise.');\n    this.result = void 0;\n  }\n}\nclass SkipAniamtionSignal extends Error {\n  constructor() {\n    super('SkipAnimationSignal');\n    this.result = void 0;\n  }\n}\nconst isFrameValue = value => value instanceof FrameValue;\nlet nextId$1 = 1;\nclass FrameValue extends FluidValue {\n  constructor(...args) {\n    super(...args);\n    this.id = nextId$1++;\n    this.key = void 0;\n    this._priority = 0;\n  }\n  get priority() {\n    return this._priority;\n  }\n  set priority(priority) {\n    if (this._priority != priority) {\n      this._priority = priority;\n      this._onPriorityChange(priority);\n    }\n  }\n  get() {\n    const node = getAnimated(this);\n    return node && node.getValue();\n  }\n  to(...args) {\n    return Globals.to(this, args);\n  }\n  interpolate(...args) {\n    deprecateInterpolate();\n    return Globals.to(this, args);\n  }\n  toJSON() {\n    return this.get();\n  }\n  observerAdded(count) {\n    if (count == 1) this._attach();\n  }\n  observerRemoved(count) {\n    if (count == 0) this._detach();\n  }\n  _attach() {}\n  _detach() {}\n  _onChange(value, idle = false) {\n    callFluidObservers(this, {\n      type: 'change',\n      parent: this,\n      value,\n      idle\n    });\n  }\n  _onPriorityChange(priority) {\n    if (!this.idle) {\n      frameLoop.sort(this);\n    }\n    callFluidObservers(this, {\n      type: 'priority',\n      parent: this,\n      priority\n    });\n  }\n}\nconst $P = Symbol.for('SpringPhase');\nconst HAS_ANIMATED = 1;\nconst IS_ANIMATING = 2;\nconst IS_PAUSED = 4;\nconst hasAnimated = target => (target[$P] & HAS_ANIMATED) > 0;\nconst isAnimating = target => (target[$P] & IS_ANIMATING) > 0;\nconst isPaused = target => (target[$P] & IS_PAUSED) > 0;\nconst setActiveBit = (target, active) => active ? target[$P] |= IS_ANIMATING | HAS_ANIMATED : target[$P] &= ~IS_ANIMATING;\nconst setPausedBit = (target, paused) => paused ? target[$P] |= IS_PAUSED : target[$P] &= ~IS_PAUSED;\nclass SpringValue extends FrameValue {\n  constructor(arg1, arg2) {\n    super();\n    this.key = void 0;\n    this.animation = new Animation();\n    this.queue = void 0;\n    this.defaultProps = {};\n    this._state = {\n      paused: false,\n      pauseQueue: new Set(),\n      resumeQueue: new Set(),\n      timeouts: new Set()\n    };\n    this._pendingCalls = new Set();\n    this._lastCallId = 0;\n    this._lastToId = 0;\n    this._memoizedDuration = 0;\n    if (!is.und(arg1) || !is.und(arg2)) {\n      const props = is.obj(arg1) ? _extends({}, arg1) : _extends({}, arg2, {\n        from: arg1\n      });\n      if (is.und(props.default)) {\n        props.default = true;\n      }\n      this.start(props);\n    }\n  }\n  get idle() {\n    return !(isAnimating(this) || this._state.asyncTo) || isPaused(this);\n  }\n  get goal() {\n    return getFluidValue(this.animation.to);\n  }\n  get velocity() {\n    const node = getAnimated(this);\n    return node instanceof AnimatedValue ? node.lastVelocity || 0 : node.getPayload().map(node => node.lastVelocity || 0);\n  }\n  get hasAnimated() {\n    return hasAnimated(this);\n  }\n  get isAnimating() {\n    return isAnimating(this);\n  }\n  get isPaused() {\n    return isPaused(this);\n  }\n  advance(dt) {\n    let idle = true;\n    let changed = false;\n    const anim = this.animation;\n    let {\n      config,\n      toValues\n    } = anim;\n    const payload = getPayload(anim.to);\n    if (!payload && hasFluidValue(anim.to)) {\n      toValues = toArray(getFluidValue(anim.to));\n    }\n    anim.values.forEach((node, i) => {\n      if (node.done) return;\n      const to = node.constructor == AnimatedString ? 1 : payload ? payload[i].lastPosition : toValues[i];\n      let finished = anim.immediate;\n      let position = to;\n      if (!finished) {\n        position = node.lastPosition;\n        if (config.tension <= 0) {\n          node.done = true;\n          return;\n        }\n        let elapsed = node.elapsedTime += dt;\n        const from = anim.fromValues[i];\n        const v0 = node.v0 != null ? node.v0 : node.v0 = is.arr(config.velocity) ? config.velocity[i] : config.velocity;\n        let velocity;\n        if (!is.und(config.duration)) {\n          let p = 1;\n          if (config.duration > 0) {\n            if (this._memoizedDuration !== config.duration) {\n              this._memoizedDuration = config.duration;\n              if (node.durationProgress > 0) {\n                node.elapsedTime = config.duration * node.durationProgress;\n                elapsed = node.elapsedTime += dt;\n              }\n            }\n            p = (config.progress || 0) + elapsed / this._memoizedDuration;\n            p = p > 1 ? 1 : p < 0 ? 0 : p;\n            node.durationProgress = p;\n          }\n          position = from + config.easing(p) * (to - from);\n          velocity = (position - node.lastPosition) / dt;\n          finished = p == 1;\n        } else if (config.decay) {\n          const decay = config.decay === true ? 0.998 : config.decay;\n          const e = Math.exp(-(1 - decay) * elapsed);\n          position = from + v0 / (1 - decay) * (1 - e);\n          finished = Math.abs(node.lastPosition - position) < 0.1;\n          velocity = v0 * e;\n        } else {\n          velocity = node.lastVelocity == null ? v0 : node.lastVelocity;\n          const precision = config.precision || (from == to ? 0.005 : Math.min(1, Math.abs(to - from) * 0.001));\n          const restVelocity = config.restVelocity || precision / 10;\n          const bounceFactor = config.clamp ? 0 : config.bounce;\n          const canBounce = !is.und(bounceFactor);\n          const isGrowing = from == to ? node.v0 > 0 : from < to;\n          let isMoving;\n          let isBouncing = false;\n          const step = 1;\n          const numSteps = Math.ceil(dt / step);\n          for (let n = 0; n < numSteps; ++n) {\n            isMoving = Math.abs(velocity) > restVelocity;\n            if (!isMoving) {\n              finished = Math.abs(to - position) <= precision;\n              if (finished) {\n                break;\n              }\n            }\n            if (canBounce) {\n              isBouncing = position == to || position > to == isGrowing;\n              if (isBouncing) {\n                velocity = -velocity * bounceFactor;\n                position = to;\n              }\n            }\n            const springForce = -config.tension * 0.000001 * (position - to);\n            const dampingForce = -config.friction * 0.001 * velocity;\n            const acceleration = (springForce + dampingForce) / config.mass;\n            velocity = velocity + acceleration * step;\n            position = position + velocity * step;\n          }\n        }\n        node.lastVelocity = velocity;\n        if (Number.isNaN(position)) {\n          console.warn(`Got NaN while animating:`, this);\n          finished = true;\n        }\n      }\n      if (payload && !payload[i].done) {\n        finished = false;\n      }\n      if (finished) {\n        node.done = true;\n      } else {\n        idle = false;\n      }\n      if (node.setValue(position, config.round)) {\n        changed = true;\n      }\n    });\n    const node = getAnimated(this);\n    const currVal = node.getValue();\n    if (idle) {\n      const finalVal = getFluidValue(anim.to);\n      if ((currVal !== finalVal || changed) && !config.decay) {\n        node.setValue(finalVal);\n        this._onChange(finalVal);\n      } else if (changed && config.decay) {\n        this._onChange(currVal);\n      }\n      this._stop();\n    } else if (changed) {\n      this._onChange(currVal);\n    }\n  }\n  set(value) {\n    raf.batchedUpdates(() => {\n      this._stop();\n      this._focus(value);\n      this._set(value);\n    });\n    return this;\n  }\n  pause() {\n    this._update({\n      pause: true\n    });\n  }\n  resume() {\n    this._update({\n      pause: false\n    });\n  }\n  finish() {\n    if (isAnimating(this)) {\n      const {\n        to,\n        config\n      } = this.animation;\n      raf.batchedUpdates(() => {\n        this._onStart();\n        if (!config.decay) {\n          this._set(to, false);\n        }\n        this._stop();\n      });\n    }\n    return this;\n  }\n  update(props) {\n    const queue = this.queue || (this.queue = []);\n    queue.push(props);\n    return this;\n  }\n  start(to, arg2) {\n    let queue;\n    if (!is.und(to)) {\n      queue = [is.obj(to) ? to : _extends({}, arg2, {\n        to\n      })];\n    } else {\n      queue = this.queue || [];\n      this.queue = [];\n    }\n    return Promise.all(queue.map(props => this._update(props))).then(results => getCombinedResult(this, results));\n  }\n  stop(cancel) {\n    const {\n      to\n    } = this.animation;\n    this._focus(this.get());\n    stopAsync(this._state, cancel && this._lastCallId);\n    raf.batchedUpdates(() => this._stop(to, cancel));\n    return this;\n  }\n  reset() {\n    this._update({\n      reset: true\n    });\n  }\n  eventObserved(event) {\n    if (event.type == 'change') {\n      this._start();\n    } else if (event.type == 'priority') {\n      this.priority = event.priority + 1;\n    }\n  }\n  _prepareNode(props) {\n    const key = this.key || '';\n    let {\n      to,\n      from\n    } = props;\n    to = is.obj(to) ? to[key] : to;\n    if (to == null || isAsyncTo(to)) {\n      to = undefined;\n    }\n    from = is.obj(from) ? from[key] : from;\n    if (from == null) {\n      from = undefined;\n    }\n    const range = {\n      to,\n      from\n    };\n    if (!hasAnimated(this)) {\n      if (props.reverse) [to, from] = [from, to];\n      from = getFluidValue(from);\n      if (!is.und(from)) {\n        this._set(from);\n      } else if (!getAnimated(this)) {\n        this._set(to);\n      }\n    }\n    return range;\n  }\n  _update(_ref, isLoop) {\n    let props = _extends({}, _ref);\n    const {\n      key,\n      defaultProps\n    } = this;\n    if (props.default) Object.assign(defaultProps, getDefaultProps(props, (value, prop) => /^on/.test(prop) ? resolveProp(value, key) : value));\n    mergeActiveFn(this, props, 'onProps');\n    sendEvent(this, 'onProps', props, this);\n    const range = this._prepareNode(props);\n    if (Object.isFrozen(this)) {\n      throw Error('Cannot animate a `SpringValue` object that is frozen. ' + 'Did you forget to pass your component to `animated(...)` before animating its props?');\n    }\n    const state = this._state;\n    return scheduleProps(++this._lastCallId, {\n      key,\n      props,\n      defaultProps,\n      state,\n      actions: {\n        pause: () => {\n          if (!isPaused(this)) {\n            setPausedBit(this, true);\n            flushCalls(state.pauseQueue);\n            sendEvent(this, 'onPause', getFinishedResult(this, checkFinished(this, this.animation.to)), this);\n          }\n        },\n        resume: () => {\n          if (isPaused(this)) {\n            setPausedBit(this, false);\n            if (isAnimating(this)) {\n              this._resume();\n            }\n            flushCalls(state.resumeQueue);\n            sendEvent(this, 'onResume', getFinishedResult(this, checkFinished(this, this.animation.to)), this);\n          }\n        },\n        start: this._merge.bind(this, range)\n      }\n    }).then(result => {\n      if (props.loop && result.finished && !(isLoop && result.noop)) {\n        const nextProps = createLoopUpdate(props);\n        if (nextProps) {\n          return this._update(nextProps, true);\n        }\n      }\n      return result;\n    });\n  }\n  _merge(range, props, resolve) {\n    if (props.cancel) {\n      this.stop(true);\n      return resolve(getCancelledResult(this));\n    }\n    const hasToProp = !is.und(range.to);\n    const hasFromProp = !is.und(range.from);\n    if (hasToProp || hasFromProp) {\n      if (props.callId > this._lastToId) {\n        this._lastToId = props.callId;\n      } else {\n        return resolve(getCancelledResult(this));\n      }\n    }\n    const {\n      key,\n      defaultProps,\n      animation: anim\n    } = this;\n    const {\n      to: prevTo,\n      from: prevFrom\n    } = anim;\n    let {\n      to = prevTo,\n      from = prevFrom\n    } = range;\n    if (hasFromProp && !hasToProp && (!props.default || is.und(to))) {\n      to = from;\n    }\n    if (props.reverse) [to, from] = [from, to];\n    const hasFromChanged = !isEqual(from, prevFrom);\n    if (hasFromChanged) {\n      anim.from = from;\n    }\n    from = getFluidValue(from);\n    const hasToChanged = !isEqual(to, prevTo);\n    if (hasToChanged) {\n      this._focus(to);\n    }\n    const hasAsyncTo = isAsyncTo(props.to);\n    const {\n      config\n    } = anim;\n    const {\n      decay,\n      velocity\n    } = config;\n    if (hasToProp || hasFromProp) {\n      config.velocity = 0;\n    }\n    if (props.config && !hasAsyncTo) {\n      mergeConfig(config, callProp(props.config, key), props.config !== defaultProps.config ? callProp(defaultProps.config, key) : void 0);\n    }\n    let node = getAnimated(this);\n    if (!node || is.und(to)) {\n      return resolve(getFinishedResult(this, true));\n    }\n    const reset = is.und(props.reset) ? hasFromProp && !props.default : !is.und(from) && matchProp(props.reset, key);\n    const value = reset ? from : this.get();\n    const goal = computeGoal(to);\n    const isAnimatable = is.num(goal) || is.arr(goal) || isAnimatedString(goal);\n    const immediate = !hasAsyncTo && (!isAnimatable || matchProp(defaultProps.immediate || props.immediate, key));\n    if (hasToChanged) {\n      const nodeType = getAnimatedType(to);\n      if (nodeType !== node.constructor) {\n        if (immediate) {\n          node = this._set(goal);\n        } else throw Error(`Cannot animate between ${node.constructor.name} and ${nodeType.name}, as the \"to\" prop suggests`);\n      }\n    }\n    const goalType = node.constructor;\n    let started = hasFluidValue(to);\n    let finished = false;\n    if (!started) {\n      const hasValueChanged = reset || !hasAnimated(this) && hasFromChanged;\n      if (hasToChanged || hasValueChanged) {\n        finished = isEqual(computeGoal(value), goal);\n        started = !finished;\n      }\n      if (!isEqual(anim.immediate, immediate) && !immediate || !isEqual(config.decay, decay) || !isEqual(config.velocity, velocity)) {\n        started = true;\n      }\n    }\n    if (finished && isAnimating(this)) {\n      if (anim.changed && !reset) {\n        started = true;\n      } else if (!started) {\n        this._stop(prevTo);\n      }\n    }\n    if (!hasAsyncTo) {\n      if (started || hasFluidValue(prevTo)) {\n        anim.values = node.getPayload();\n        anim.toValues = hasFluidValue(to) ? null : goalType == AnimatedString ? [1] : toArray(goal);\n      }\n      if (anim.immediate != immediate) {\n        anim.immediate = immediate;\n        if (!immediate && !reset) {\n          this._set(prevTo);\n        }\n      }\n      if (started) {\n        const {\n          onRest\n        } = anim;\n        each(ACTIVE_EVENTS, type => mergeActiveFn(this, props, type));\n        const result = getFinishedResult(this, checkFinished(this, prevTo));\n        flushCalls(this._pendingCalls, result);\n        this._pendingCalls.add(resolve);\n        if (anim.changed) raf.batchedUpdates(() => {\n          anim.changed = !reset;\n          onRest == null ? void 0 : onRest(result, this);\n          if (reset) {\n            callProp(defaultProps.onRest, result);\n          } else {\n            anim.onStart == null ? void 0 : anim.onStart(result, this);\n          }\n        });\n      }\n    }\n    if (reset) {\n      this._set(value);\n    }\n    if (hasAsyncTo) {\n      resolve(runAsync(props.to, props, this._state, this));\n    } else if (started) {\n      this._start();\n    } else if (isAnimating(this) && !hasToChanged) {\n      this._pendingCalls.add(resolve);\n    } else {\n      resolve(getNoopResult(value));\n    }\n  }\n  _focus(value) {\n    const anim = this.animation;\n    if (value !== anim.to) {\n      if (getFluidObservers(this)) {\n        this._detach();\n      }\n      anim.to = value;\n      if (getFluidObservers(this)) {\n        this._attach();\n      }\n    }\n  }\n  _attach() {\n    let priority = 0;\n    const {\n      to\n    } = this.animation;\n    if (hasFluidValue(to)) {\n      addFluidObserver(to, this);\n      if (isFrameValue(to)) {\n        priority = to.priority + 1;\n      }\n    }\n    this.priority = priority;\n  }\n  _detach() {\n    const {\n      to\n    } = this.animation;\n    if (hasFluidValue(to)) {\n      removeFluidObserver(to, this);\n    }\n  }\n  _set(arg, idle = true) {\n    const value = getFluidValue(arg);\n    if (!is.und(value)) {\n      const oldNode = getAnimated(this);\n      if (!oldNode || !isEqual(value, oldNode.getValue())) {\n        const nodeType = getAnimatedType(value);\n        if (!oldNode || oldNode.constructor != nodeType) {\n          setAnimated(this, nodeType.create(value));\n        } else {\n          oldNode.setValue(value);\n        }\n        if (oldNode) {\n          raf.batchedUpdates(() => {\n            this._onChange(value, idle);\n          });\n        }\n      }\n    }\n    return getAnimated(this);\n  }\n  _onStart() {\n    const anim = this.animation;\n    if (!anim.changed) {\n      anim.changed = true;\n      sendEvent(this, 'onStart', getFinishedResult(this, checkFinished(this, anim.to)), this);\n    }\n  }\n  _onChange(value, idle) {\n    if (!idle) {\n      this._onStart();\n      callProp(this.animation.onChange, value, this);\n    }\n    callProp(this.defaultProps.onChange, value, this);\n    super._onChange(value, idle);\n  }\n  _start() {\n    const anim = this.animation;\n    getAnimated(this).reset(getFluidValue(anim.to));\n    if (!anim.immediate) {\n      anim.fromValues = anim.values.map(node => node.lastPosition);\n    }\n    if (!isAnimating(this)) {\n      setActiveBit(this, true);\n      if (!isPaused(this)) {\n        this._resume();\n      }\n    }\n  }\n  _resume() {\n    if (Globals.skipAnimation) {\n      this.finish();\n    } else {\n      frameLoop.start(this);\n    }\n  }\n  _stop(goal, cancel) {\n    if (isAnimating(this)) {\n      setActiveBit(this, false);\n      const anim = this.animation;\n      each(anim.values, node => {\n        node.done = true;\n      });\n      if (anim.toValues) {\n        anim.onChange = anim.onPause = anim.onResume = undefined;\n      }\n      callFluidObservers(this, {\n        type: 'idle',\n        parent: this\n      });\n      const result = cancel ? getCancelledResult(this.get()) : getFinishedResult(this.get(), checkFinished(this, goal != null ? goal : anim.to));\n      flushCalls(this._pendingCalls, result);\n      if (anim.changed) {\n        anim.changed = false;\n        sendEvent(this, 'onRest', result, this);\n      }\n    }\n  }\n}\nfunction checkFinished(target, to) {\n  const goal = computeGoal(to);\n  const value = computeGoal(target.get());\n  return isEqual(value, goal);\n}\nfunction createLoopUpdate(props, loop = props.loop, to = props.to) {\n  let loopRet = callProp(loop);\n  if (loopRet) {\n    const overrides = loopRet !== true && inferTo(loopRet);\n    const reverse = (overrides || props).reverse;\n    const reset = !overrides || overrides.reset;\n    return createUpdate(_extends({}, props, {\n      loop,\n      default: false,\n      pause: undefined,\n      to: !reverse || isAsyncTo(to) ? to : undefined,\n      from: reset ? props.from : undefined,\n      reset\n    }, overrides));\n  }\n}\nfunction createUpdate(props) {\n  const {\n    to,\n    from\n  } = props = inferTo(props);\n  const keys = new Set();\n  if (is.obj(to)) findDefined(to, keys);\n  if (is.obj(from)) findDefined(from, keys);\n  props.keys = keys.size ? Array.from(keys) : null;\n  return props;\n}\nfunction declareUpdate(props) {\n  const update = createUpdate(props);\n  if (is.und(update.default)) {\n    update.default = getDefaultProps(update);\n  }\n  return update;\n}\nfunction findDefined(values, keys) {\n  eachProp(values, (value, key) => value != null && keys.add(key));\n}\nconst ACTIVE_EVENTS = ['onStart', 'onRest', 'onChange', 'onPause', 'onResume'];\nfunction mergeActiveFn(target, props, type) {\n  target.animation[type] = props[type] !== getDefaultProp(props, type) ? resolveProp(props[type], target.key) : undefined;\n}\nfunction sendEvent(target, type, ...args) {\n  var _target$animation$typ, _target$animation, _target$defaultProps$, _target$defaultProps;\n  (_target$animation$typ = (_target$animation = target.animation)[type]) == null ? void 0 : _target$animation$typ.call(_target$animation, ...args);\n  (_target$defaultProps$ = (_target$defaultProps = target.defaultProps)[type]) == null ? void 0 : _target$defaultProps$.call(_target$defaultProps, ...args);\n}\nconst BATCHED_EVENTS = ['onStart', 'onChange', 'onRest'];\nlet nextId = 1;\nclass Controller {\n  constructor(props, flush) {\n    this.id = nextId++;\n    this.springs = {};\n    this.queue = [];\n    this.ref = void 0;\n    this._flush = void 0;\n    this._initialProps = void 0;\n    this._lastAsyncId = 0;\n    this._active = new Set();\n    this._changed = new Set();\n    this._started = false;\n    this._item = void 0;\n    this._state = {\n      paused: false,\n      pauseQueue: new Set(),\n      resumeQueue: new Set(),\n      timeouts: new Set()\n    };\n    this._events = {\n      onStart: new Map(),\n      onChange: new Map(),\n      onRest: new Map()\n    };\n    this._onFrame = this._onFrame.bind(this);\n    if (flush) {\n      this._flush = flush;\n    }\n    if (props) {\n      this.start(_extends({\n        default: true\n      }, props));\n    }\n  }\n  get idle() {\n    return !this._state.asyncTo && Object.values(this.springs).every(spring => spring.idle);\n  }\n  get item() {\n    return this._item;\n  }\n  set item(item) {\n    this._item = item;\n  }\n  get() {\n    const values = {};\n    this.each((spring, key) => values[key] = spring.get());\n    return values;\n  }\n  set(values) {\n    for (const key in values) {\n      const value = values[key];\n      if (!is.und(value)) {\n        this.springs[key].set(value);\n      }\n    }\n  }\n  update(props) {\n    if (props) {\n      this.queue.push(createUpdate(props));\n    }\n    return this;\n  }\n  start(props) {\n    let {\n      queue\n    } = this;\n    if (props) {\n      queue = toArray(props).map(createUpdate);\n    } else {\n      this.queue = [];\n    }\n    if (this._flush) {\n      return this._flush(this, queue);\n    }\n    prepareKeys(this, queue);\n    return flushUpdateQueue(this, queue);\n  }\n  stop(arg, keys) {\n    if (arg !== !!arg) {\n      keys = arg;\n    }\n    if (keys) {\n      const springs = this.springs;\n      each(toArray(keys), key => springs[key].stop(!!arg));\n    } else {\n      stopAsync(this._state, this._lastAsyncId);\n      this.each(spring => spring.stop(!!arg));\n    }\n    return this;\n  }\n  pause(keys) {\n    if (is.und(keys)) {\n      this.start({\n        pause: true\n      });\n    } else {\n      const springs = this.springs;\n      each(toArray(keys), key => springs[key].pause());\n    }\n    return this;\n  }\n  resume(keys) {\n    if (is.und(keys)) {\n      this.start({\n        pause: false\n      });\n    } else {\n      const springs = this.springs;\n      each(toArray(keys), key => springs[key].resume());\n    }\n    return this;\n  }\n  each(iterator) {\n    eachProp(this.springs, iterator);\n  }\n  _onFrame() {\n    const {\n      onStart,\n      onChange,\n      onRest\n    } = this._events;\n    const active = this._active.size > 0;\n    const changed = this._changed.size > 0;\n    if (active && !this._started || changed && !this._started) {\n      this._started = true;\n      flush(onStart, ([onStart, result]) => {\n        result.value = this.get();\n        onStart(result, this, this._item);\n      });\n    }\n    const idle = !active && this._started;\n    const values = changed || idle && onRest.size ? this.get() : null;\n    if (changed && onChange.size) {\n      flush(onChange, ([onChange, result]) => {\n        result.value = values;\n        onChange(result, this, this._item);\n      });\n    }\n    if (idle) {\n      this._started = false;\n      flush(onRest, ([onRest, result]) => {\n        result.value = values;\n        onRest(result, this, this._item);\n      });\n    }\n  }\n  eventObserved(event) {\n    if (event.type == 'change') {\n      this._changed.add(event.parent);\n      if (!event.idle) {\n        this._active.add(event.parent);\n      }\n    } else if (event.type == 'idle') {\n      this._active.delete(event.parent);\n    } else return;\n    raf.onFrame(this._onFrame);\n  }\n}\nfunction flushUpdateQueue(ctrl, queue) {\n  return Promise.all(queue.map(props => flushUpdate(ctrl, props))).then(results => getCombinedResult(ctrl, results));\n}\nasync function flushUpdate(ctrl, props, isLoop) {\n  const {\n    keys,\n    to,\n    from,\n    loop,\n    onRest,\n    onResolve\n  } = props;\n  const defaults = is.obj(props.default) && props.default;\n  if (loop) {\n    props.loop = false;\n  }\n  if (to === false) props.to = null;\n  if (from === false) props.from = null;\n  const asyncTo = is.arr(to) || is.fun(to) ? to : undefined;\n  if (asyncTo) {\n    props.to = undefined;\n    props.onRest = undefined;\n    if (defaults) {\n      defaults.onRest = undefined;\n    }\n  } else {\n    each(BATCHED_EVENTS, key => {\n      const handler = props[key];\n      if (is.fun(handler)) {\n        const queue = ctrl['_events'][key];\n        props[key] = ({\n          finished,\n          cancelled\n        }) => {\n          const result = queue.get(handler);\n          if (result) {\n            if (!finished) result.finished = false;\n            if (cancelled) result.cancelled = true;\n          } else {\n            queue.set(handler, {\n              value: null,\n              finished: finished || false,\n              cancelled: cancelled || false\n            });\n          }\n        };\n        if (defaults) {\n          defaults[key] = props[key];\n        }\n      }\n    });\n  }\n  const state = ctrl['_state'];\n  if (props.pause === !state.paused) {\n    state.paused = props.pause;\n    flushCalls(props.pause ? state.pauseQueue : state.resumeQueue);\n  } else if (state.paused) {\n    props.pause = true;\n  }\n  const promises = (keys || Object.keys(ctrl.springs)).map(key => ctrl.springs[key].start(props));\n  const cancel = props.cancel === true || getDefaultProp(props, 'cancel') === true;\n  if (asyncTo || cancel && state.asyncId) {\n    promises.push(scheduleProps(++ctrl['_lastAsyncId'], {\n      props,\n      state,\n      actions: {\n        pause: noop,\n        resume: noop,\n        start(props, resolve) {\n          if (cancel) {\n            stopAsync(state, ctrl['_lastAsyncId']);\n            resolve(getCancelledResult(ctrl));\n          } else {\n            props.onRest = onRest;\n            resolve(runAsync(asyncTo, props, state, ctrl));\n          }\n        }\n      }\n    }));\n  }\n  if (state.paused) {\n    await new Promise(resume => {\n      state.resumeQueue.add(resume);\n    });\n  }\n  const result = getCombinedResult(ctrl, await Promise.all(promises));\n  if (loop && result.finished && !(isLoop && result.noop)) {\n    const nextProps = createLoopUpdate(props, loop, to);\n    if (nextProps) {\n      prepareKeys(ctrl, [nextProps]);\n      return flushUpdate(ctrl, nextProps, true);\n    }\n  }\n  if (onResolve) {\n    raf.batchedUpdates(() => onResolve(result, ctrl, ctrl.item));\n  }\n  return result;\n}\nfunction getSprings(ctrl, props) {\n  const springs = _extends({}, ctrl.springs);\n  if (props) {\n    each(toArray(props), props => {\n      if (is.und(props.keys)) {\n        props = createUpdate(props);\n      }\n      if (!is.obj(props.to)) {\n        props = _extends({}, props, {\n          to: undefined\n        });\n      }\n      prepareSprings(springs, props, key => {\n        return createSpring(key);\n      });\n    });\n  }\n  setSprings(ctrl, springs);\n  return springs;\n}\nfunction setSprings(ctrl, springs) {\n  eachProp(springs, (spring, key) => {\n    if (!ctrl.springs[key]) {\n      ctrl.springs[key] = spring;\n      addFluidObserver(spring, ctrl);\n    }\n  });\n}\nfunction createSpring(key, observer) {\n  const spring = new SpringValue();\n  spring.key = key;\n  if (observer) {\n    addFluidObserver(spring, observer);\n  }\n  return spring;\n}\nfunction prepareSprings(springs, props, create) {\n  if (props.keys) {\n    each(props.keys, key => {\n      const spring = springs[key] || (springs[key] = create(key));\n      spring['_prepareNode'](props);\n    });\n  }\n}\nfunction prepareKeys(ctrl, queue) {\n  each(queue, props => {\n    prepareSprings(ctrl.springs, props, key => {\n      return createSpring(key, ctrl);\n    });\n  });\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nconst _excluded$3 = [\"children\"];\nconst SpringContext = _ref => {\n  let {\n      children\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded$3);\n  const inherited = useContext(ctx);\n  const pause = props.pause || !!inherited.pause,\n    immediate = props.immediate || !!inherited.immediate;\n  props = useMemoOne(() => ({\n    pause,\n    immediate\n  }), [pause, immediate]);\n  const {\n    Provider\n  } = ctx;\n  return React.createElement(Provider, {\n    value: props\n  }, children);\n};\nconst ctx = makeContext(SpringContext, {});\nSpringContext.Provider = ctx.Provider;\nSpringContext.Consumer = ctx.Consumer;\nfunction makeContext(target, init) {\n  Object.assign(target, React.createContext(init));\n  target.Provider._context = target;\n  target.Consumer._context = target;\n  return target;\n}\nconst SpringRef = () => {\n  const current = [];\n  const SpringRef = function SpringRef(props) {\n    deprecateDirectCall();\n    const results = [];\n    each(current, (ctrl, i) => {\n      if (is.und(props)) {\n        results.push(ctrl.start());\n      } else {\n        const update = _getProps(props, ctrl, i);\n        if (update) {\n          results.push(ctrl.start(update));\n        }\n      }\n    });\n    return results;\n  };\n  SpringRef.current = current;\n  SpringRef.add = function (ctrl) {\n    if (!current.includes(ctrl)) {\n      current.push(ctrl);\n    }\n  };\n  SpringRef.delete = function (ctrl) {\n    const i = current.indexOf(ctrl);\n    if (~i) current.splice(i, 1);\n  };\n  SpringRef.pause = function () {\n    each(current, ctrl => ctrl.pause(...arguments));\n    return this;\n  };\n  SpringRef.resume = function () {\n    each(current, ctrl => ctrl.resume(...arguments));\n    return this;\n  };\n  SpringRef.set = function (values) {\n    each(current, ctrl => ctrl.set(values));\n  };\n  SpringRef.start = function (props) {\n    const results = [];\n    each(current, (ctrl, i) => {\n      if (is.und(props)) {\n        results.push(ctrl.start());\n      } else {\n        const update = this._getProps(props, ctrl, i);\n        if (update) {\n          results.push(ctrl.start(update));\n        }\n      }\n    });\n    return results;\n  };\n  SpringRef.stop = function () {\n    each(current, ctrl => ctrl.stop(...arguments));\n    return this;\n  };\n  SpringRef.update = function (props) {\n    each(current, (ctrl, i) => ctrl.update(this._getProps(props, ctrl, i)));\n    return this;\n  };\n  const _getProps = function _getProps(arg, ctrl, index) {\n    return is.fun(arg) ? arg(index, ctrl) : arg;\n  };\n  SpringRef._getProps = _getProps;\n  return SpringRef;\n};\nfunction useSprings(length, props, deps) {\n  const propsFn = is.fun(props) && props;\n  if (propsFn && !deps) deps = [];\n  const ref = useMemo(() => propsFn || arguments.length == 3 ? SpringRef() : void 0, []);\n  const layoutId = useRef(0);\n  const forceUpdate = useForceUpdate();\n  const state = useMemo(() => ({\n    ctrls: [],\n    queue: [],\n    flush(ctrl, updates) {\n      const springs = getSprings(ctrl, updates);\n      const canFlushSync = layoutId.current > 0 && !state.queue.length && !Object.keys(springs).some(key => !ctrl.springs[key]);\n      return canFlushSync ? flushUpdateQueue(ctrl, updates) : new Promise(resolve => {\n        setSprings(ctrl, springs);\n        state.queue.push(() => {\n          resolve(flushUpdateQueue(ctrl, updates));\n        });\n        forceUpdate();\n      });\n    }\n  }), []);\n  const ctrls = useRef([...state.ctrls]);\n  const updates = [];\n  const prevLength = usePrev(length) || 0;\n  useMemo(() => {\n    each(ctrls.current.slice(length, prevLength), ctrl => {\n      detachRefs(ctrl, ref);\n      ctrl.stop(true);\n    });\n    ctrls.current.length = length;\n    declareUpdates(prevLength, length);\n  }, [length]);\n  useMemo(() => {\n    declareUpdates(0, Math.min(prevLength, length));\n  }, deps);\n  function declareUpdates(startIndex, endIndex) {\n    for (let i = startIndex; i < endIndex; i++) {\n      const ctrl = ctrls.current[i] || (ctrls.current[i] = new Controller(null, state.flush));\n      const update = propsFn ? propsFn(i, ctrl) : props[i];\n      if (update) {\n        updates[i] = declareUpdate(update);\n      }\n    }\n  }\n  const springs = ctrls.current.map((ctrl, i) => getSprings(ctrl, updates[i]));\n  const context = useContext(SpringContext);\n  const prevContext = usePrev(context);\n  const hasContext = context !== prevContext && hasProps(context);\n  useLayoutEffect(() => {\n    layoutId.current++;\n    state.ctrls = ctrls.current;\n    const {\n      queue\n    } = state;\n    if (queue.length) {\n      state.queue = [];\n      each(queue, cb => cb());\n    }\n    each(ctrls.current, (ctrl, i) => {\n      ref == null ? void 0 : ref.add(ctrl);\n      if (hasContext) {\n        ctrl.start({\n          default: context\n        });\n      }\n      const update = updates[i];\n      if (update) {\n        replaceRef(ctrl, update.ref);\n        if (ctrl.ref) {\n          ctrl.queue.push(update);\n        } else {\n          ctrl.start(update);\n        }\n      }\n    });\n  });\n  useOnce(() => () => {\n    each(state.ctrls, ctrl => ctrl.stop(true));\n  });\n  const values = springs.map(x => _extends({}, x));\n  return ref ? [values, ref] : values;\n}\nfunction useSpring(props, deps) {\n  const isFn = is.fun(props);\n  const [[values], ref] = useSprings(1, isFn ? props : [props], isFn ? deps || [] : deps);\n  return isFn || arguments.length == 2 ? [values, ref] : values;\n}\nconst initSpringRef = () => SpringRef();\nconst useSpringRef = () => useState(initSpringRef)[0];\nfunction useTrail(length, propsArg, deps) {\n  const propsFn = is.fun(propsArg) && propsArg;\n  if (propsFn && !deps) deps = [];\n  let reverse = true;\n  const result = useSprings(length, (i, ctrl) => {\n    const props = propsFn ? propsFn(i, ctrl) : propsArg;\n    reverse = reverse && props.reverse;\n    return props;\n  }, deps || [{}]);\n  const ref = result[1];\n  useLayoutEffect(() => {\n    each(ref.current, (ctrl, i) => {\n      const parent = ref.current[i + (reverse ? 1 : -1)];\n      if (parent) ctrl.start({\n        to: parent.springs\n      });\n    });\n  }, deps);\n  if (propsFn || arguments.length == 3) {\n    ref['_getProps'] = (propsArg, ctrl, i) => {\n      const props = is.fun(propsArg) ? propsArg(i, ctrl) : propsArg;\n      if (props) {\n        const parent = ref.current[i + (props.reverse ? 1 : -1)];\n        if (parent) props.to = parent.springs;\n        return props;\n      }\n    };\n    return result;\n  }\n  return result[0];\n}\nlet TransitionPhase;\n(function (TransitionPhase) {\n  TransitionPhase[\"MOUNT\"] = \"mount\";\n  TransitionPhase[\"ENTER\"] = \"enter\";\n  TransitionPhase[\"UPDATE\"] = \"update\";\n  TransitionPhase[\"LEAVE\"] = \"leave\";\n})(TransitionPhase || (TransitionPhase = {}));\nfunction useTransition(data, props, deps) {\n  const propsFn = is.fun(props) && props;\n  const {\n    reset,\n    sort,\n    trail = 0,\n    expires = true,\n    onDestroyed,\n    ref: propsRef,\n    config: propsConfig\n  } = propsFn ? propsFn() : props;\n  const ref = useMemo(() => propsFn || arguments.length == 3 ? SpringRef() : void 0, []);\n  const items = toArray(data);\n  const transitions = [];\n  const usedTransitions = useRef(null);\n  const prevTransitions = reset ? null : usedTransitions.current;\n  useLayoutEffect(() => {\n    usedTransitions.current = transitions;\n  });\n  useOnce(() => () => each(usedTransitions.current, t => {\n    if (t.expired) {\n      clearTimeout(t.expirationId);\n    }\n    detachRefs(t.ctrl, ref);\n    t.ctrl.stop(true);\n  }));\n  const keys = getKeys(items, propsFn ? propsFn() : props, prevTransitions);\n  const expired = reset && usedTransitions.current || [];\n  useLayoutEffect(() => each(expired, ({\n    ctrl,\n    item,\n    key\n  }) => {\n    detachRefs(ctrl, ref);\n    callProp(onDestroyed, item, key);\n  }));\n  const reused = [];\n  if (prevTransitions) each(prevTransitions, (t, i) => {\n    if (t.expired) {\n      clearTimeout(t.expirationId);\n      expired.push(t);\n    } else {\n      i = reused[i] = keys.indexOf(t.key);\n      if (~i) transitions[i] = t;\n    }\n  });\n  each(items, (item, i) => {\n    if (!transitions[i]) {\n      transitions[i] = {\n        key: keys[i],\n        item,\n        phase: TransitionPhase.MOUNT,\n        ctrl: new Controller()\n      };\n      transitions[i].ctrl.item = item;\n    }\n  });\n  if (reused.length) {\n    let i = -1;\n    const {\n      leave\n    } = propsFn ? propsFn() : props;\n    each(reused, (keyIndex, prevIndex) => {\n      const t = prevTransitions[prevIndex];\n      if (~keyIndex) {\n        i = transitions.indexOf(t);\n        transitions[i] = _extends({}, t, {\n          item: items[keyIndex]\n        });\n      } else if (leave) {\n        transitions.splice(++i, 0, t);\n      }\n    });\n  }\n  if (is.fun(sort)) {\n    transitions.sort((a, b) => sort(a.item, b.item));\n  }\n  let delay = -trail;\n  const forceUpdate = useForceUpdate();\n  const defaultProps = getDefaultProps(props);\n  const changes = new Map();\n  each(transitions, (t, i) => {\n    const key = t.key;\n    const prevPhase = t.phase;\n    const p = propsFn ? propsFn() : props;\n    let to;\n    let phase;\n    let propsDelay = callProp(p.delay || 0, key);\n    if (prevPhase == TransitionPhase.MOUNT) {\n      to = p.enter;\n      phase = TransitionPhase.ENTER;\n    } else {\n      const isLeave = keys.indexOf(key) < 0;\n      if (prevPhase != TransitionPhase.LEAVE) {\n        if (isLeave) {\n          to = p.leave;\n          phase = TransitionPhase.LEAVE;\n        } else if (to = p.update) {\n          phase = TransitionPhase.UPDATE;\n        } else return;\n      } else if (!isLeave) {\n        to = p.enter;\n        phase = TransitionPhase.ENTER;\n      } else return;\n    }\n    to = callProp(to, t.item, i);\n    to = is.obj(to) ? inferTo(to) : {\n      to\n    };\n    if (!to.config) {\n      const config = propsConfig || defaultProps.config;\n      to.config = callProp(config, t.item, i, phase);\n    }\n    delay += trail;\n    const payload = _extends({}, defaultProps, {\n      delay: propsDelay + delay,\n      ref: propsRef,\n      immediate: p.immediate,\n      reset: false\n    }, to);\n    if (phase == TransitionPhase.ENTER && is.und(payload.from)) {\n      const _p = propsFn ? propsFn() : props;\n      const from = is.und(_p.initial) || prevTransitions ? _p.from : _p.initial;\n      payload.from = callProp(from, t.item, i);\n    }\n    const {\n      onResolve\n    } = payload;\n    payload.onResolve = result => {\n      callProp(onResolve, result);\n      const transitions = usedTransitions.current;\n      const t = transitions.find(t => t.key === key);\n      if (!t) return;\n      if (result.cancelled && t.phase != TransitionPhase.UPDATE) {\n        return;\n      }\n      if (t.ctrl.idle) {\n        const idle = transitions.every(t => t.ctrl.idle);\n        if (t.phase == TransitionPhase.LEAVE) {\n          const expiry = callProp(expires, t.item);\n          if (expiry !== false) {\n            const expiryMs = expiry === true ? 0 : expiry;\n            t.expired = true;\n            if (!idle && expiryMs > 0) {\n              if (expiryMs <= 0x7fffffff) t.expirationId = setTimeout(forceUpdate, expiryMs);\n              return;\n            }\n          }\n        }\n        if (idle && transitions.some(t => t.expired)) {\n          forceUpdate();\n        }\n      }\n    };\n    const springs = getSprings(t.ctrl, payload);\n    changes.set(t, {\n      phase,\n      springs,\n      payload\n    });\n  });\n  const context = useContext(SpringContext);\n  const prevContext = usePrev(context);\n  const hasContext = context !== prevContext && hasProps(context);\n  useLayoutEffect(() => {\n    if (hasContext) each(transitions, t => {\n      t.ctrl.start({\n        default: context\n      });\n    });\n  }, [context]);\n  useLayoutEffect(() => {\n    each(changes, ({\n      phase,\n      payload\n    }, t) => {\n      const {\n        ctrl\n      } = t;\n      t.phase = phase;\n      ref == null ? void 0 : ref.add(ctrl);\n      if (hasContext && phase == TransitionPhase.ENTER) {\n        ctrl.start({\n          default: context\n        });\n      }\n      if (payload) {\n        replaceRef(ctrl, payload.ref);\n        if (ctrl.ref) {\n          ctrl.update(payload);\n        } else {\n          ctrl.start(payload);\n        }\n      }\n    });\n  }, reset ? void 0 : deps);\n  const renderTransitions = render => React.createElement(React.Fragment, null, transitions.map((t, i) => {\n    const {\n      springs\n    } = changes.get(t) || t.ctrl;\n    const elem = render(_extends({}, springs), t.item, t, i);\n    return elem && elem.type ? React.createElement(elem.type, _extends({}, elem.props, {\n      key: is.str(t.key) || is.num(t.key) ? t.key : t.ctrl.id,\n      ref: elem.ref\n    })) : elem;\n  }));\n  return ref ? [renderTransitions, ref] : renderTransitions;\n}\nlet nextKey = 1;\nfunction getKeys(items, {\n  key,\n  keys = key\n}, prevTransitions) {\n  if (keys === null) {\n    const reused = new Set();\n    return items.map(item => {\n      const t = prevTransitions && prevTransitions.find(t => t.item === item && t.phase !== TransitionPhase.LEAVE && !reused.has(t));\n      if (t) {\n        reused.add(t);\n        return t.key;\n      }\n      return nextKey++;\n    });\n  }\n  return is.und(keys) ? items : is.fun(keys) ? items.map(keys) : toArray(keys);\n}\nconst _excluded$2 = [\"children\"];\nfunction Spring(_ref) {\n  let {\n      children\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded$2);\n  return children(useSpring(props));\n}\nconst _excluded$1 = [\"items\", \"children\"];\nfunction Trail(_ref) {\n  let {\n      items,\n      children\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n  const trails = useTrail(items.length, props);\n  return items.map((item, index) => {\n    const result = children(item, index);\n    return is.fun(result) ? result(trails[index]) : result;\n  });\n}\nconst _excluded = [\"items\", \"children\"];\nfunction Transition(_ref) {\n  let {\n      items,\n      children\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  return useTransition(items, props)(children);\n}\nclass Interpolation extends FrameValue {\n  constructor(source, args) {\n    super();\n    this.key = void 0;\n    this.idle = true;\n    this.calc = void 0;\n    this._active = new Set();\n    this.source = source;\n    this.calc = createInterpolator(...args);\n    const value = this._get();\n    const nodeType = getAnimatedType(value);\n    setAnimated(this, nodeType.create(value));\n  }\n  advance(_dt) {\n    const value = this._get();\n    const oldValue = this.get();\n    if (!isEqual(value, oldValue)) {\n      getAnimated(this).setValue(value);\n      this._onChange(value, this.idle);\n    }\n    if (!this.idle && checkIdle(this._active)) {\n      becomeIdle(this);\n    }\n  }\n  _get() {\n    const inputs = is.arr(this.source) ? this.source.map(getFluidValue) : toArray(getFluidValue(this.source));\n    return this.calc(...inputs);\n  }\n  _start() {\n    if (this.idle && !checkIdle(this._active)) {\n      this.idle = false;\n      each(getPayload(this), node => {\n        node.done = false;\n      });\n      if (Globals.skipAnimation) {\n        raf.batchedUpdates(() => this.advance());\n        becomeIdle(this);\n      } else {\n        frameLoop.start(this);\n      }\n    }\n  }\n  _attach() {\n    let priority = 1;\n    each(toArray(this.source), source => {\n      if (hasFluidValue(source)) {\n        addFluidObserver(source, this);\n      }\n      if (isFrameValue(source)) {\n        if (!source.idle) {\n          this._active.add(source);\n        }\n        priority = Math.max(priority, source.priority + 1);\n      }\n    });\n    this.priority = priority;\n    this._start();\n  }\n  _detach() {\n    each(toArray(this.source), source => {\n      if (hasFluidValue(source)) {\n        removeFluidObserver(source, this);\n      }\n    });\n    this._active.clear();\n    becomeIdle(this);\n  }\n  eventObserved(event) {\n    if (event.type == 'change') {\n      if (event.idle) {\n        this.advance();\n      } else {\n        this._active.add(event.parent);\n        this._start();\n      }\n    } else if (event.type == 'idle') {\n      this._active.delete(event.parent);\n    } else if (event.type == 'priority') {\n      this.priority = toArray(this.source).reduce((highest, parent) => Math.max(highest, (isFrameValue(parent) ? parent.priority : 0) + 1), 0);\n    }\n  }\n}\nfunction isIdle(source) {\n  return source.idle !== false;\n}\nfunction checkIdle(active) {\n  return !active.size || Array.from(active).every(isIdle);\n}\nfunction becomeIdle(self) {\n  if (!self.idle) {\n    self.idle = true;\n    each(getPayload(self), node => {\n      node.done = true;\n    });\n    callFluidObservers(self, {\n      type: 'idle',\n      parent: self\n    });\n  }\n}\nconst to = (source, ...args) => new Interpolation(source, args);\nconst interpolate = (source, ...args) => (deprecateInterpolate(), new Interpolation(source, args));\nGlobals.assign({\n  createStringInterpolator,\n  to: (source, args) => new Interpolation(source, args)\n});\nconst update = frameLoop.advance;\nexport { BailSignal, Controller, FrameValue, Interpolation, Spring, SpringContext, SpringRef, SpringValue, Trail, Transition, config, inferTo, interpolate, to, update, useChain, useSpring, useSpringRef, useSprings, useTrail, useTransition };","map":{"version":3,"names":["eachProp","is","toArray","isAnimatedString","Globals","getFluidValue","useLayoutEffect","each","raf","flush","FluidValue","deprecateInterpolate","callFluidObservers","frameLoop","hasFluidValue","flushCalls","isEqual","getFluidObservers","addFluidObserver","removeFluidObserver","noop","useMemoOne","deprecateDirectCall","useForceUpdate","usePrev","useOnce","createInterpolator","createStringInterpolator","React","useContext","useMemo","useRef","useState","getAnimated","AnimatedValue","getPayload","AnimatedString","getAnimatedType","setAnimated","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","callProp","value","args","fun","matchProp","includes","resolveProp","prop","obj","getDefaultProp","props","default","undefined","noopTransform","getDefaultProps","transform","keys","DEFAULT_PROPS","defaults","und","RESERVED_PROPS","config","from","to","ref","loop","reset","pause","cancel","reverse","immediate","delay","onProps","onStart","onChange","onPause","onResume","onRest","onResolve","items","trail","sort","expires","initial","enter","update","leave","children","onDestroyed","callId","parentId","getForwardProps","forward","count","inferTo","out","val","computeGoal","arr","map","range","output","hasProps","_","isAsyncTo","detachRefs","ctrl","_ctrl$ref","delete","replaceRef","_ctrl$ref2","add","useChain","refs","timeSteps","timeFrame","prevDelay","controllers","current","isNaN","queue","memoizedDelayProp","start","p","Promise","resolve","queues","q","then","push","all","tension","friction","gentle","wobbly","stiff","slow","molasses","linear","t","mass","damping","easing","clamp","AnimationConfig","constructor","frequency","velocity","restVelocity","precision","progress","duration","bounce","decay","round","mergeConfig","newConfig","defaultConfig","sanitizeConfig","Math","pow","PI","isTensionConfig","emptyArray","Animation","changed","values","toValues","fromValues","scheduleProps","defaultProps","state","actions","reject","_props$cancel","timeout","paused","resumeQueue","resume","timeouts","time","now","setTimeout","pauseQueue","cancelId","err","getCombinedResult","results","some","result","cancelled","getCancelledResult","get","every","getNoopResult","getFinishedResult","finished","runAsync","asyncTo","prevTo","promise","prevPromise","asyncId","preventBail","bail","bailPromise","bailIfEnded","bailSignal","bailResult","animate","arg1","arg2","BailSignal","skipAnimationSignal","SkipAniamtionSignal","skipAnimation","stopAsync","animating","stop","bind","batchedUpdates","item","clear","Error","isFrameValue","FrameValue","nextId$1","id","_priority","priority","_onPriorityChange","node","getValue","interpolate","toJSON","observerAdded","_attach","observerRemoved","_detach","_onChange","idle","type","parent","$P","Symbol","for","HAS_ANIMATED","IS_ANIMATING","IS_PAUSED","hasAnimated","isAnimating","isPaused","setActiveBit","active","setPausedBit","SpringValue","animation","_state","Set","_pendingCalls","_lastCallId","_lastToId","_memoizedDuration","goal","lastVelocity","advance","dt","anim","payload","forEach","done","lastPosition","position","elapsed","elapsedTime","v0","durationProgress","e","exp","abs","min","bounceFactor","canBounce","isGrowing","isMoving","isBouncing","step","numSteps","ceil","n","springForce","dampingForce","acceleration","Number","console","warn","setValue","currVal","finalVal","_stop","set","_focus","_set","_update","finish","_onStart","eventObserved","event","_start","_prepareNode","_ref","isLoop","test","mergeActiveFn","sendEvent","isFrozen","checkFinished","_resume","_merge","nextProps","createLoopUpdate","hasToProp","hasFromProp","prevFrom","hasFromChanged","hasToChanged","hasAsyncTo","isAnimatable","num","nodeType","name","goalType","started","hasValueChanged","ACTIVE_EVENTS","arg","oldNode","create","loopRet","overrides","createUpdate","findDefined","size","Array","declareUpdate","_target$animation$typ","_target$animation","_target$defaultProps$","_target$defaultProps","BATCHED_EVENTS","nextId","Controller","springs","_flush","_initialProps","_lastAsyncId","_active","_changed","_started","_item","_events","Map","_onFrame","spring","prepareKeys","flushUpdateQueue","iterator","onFrame","flushUpdate","handler","promises","getSprings","prepareSprings","createSpring","setSprings","observer","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","_excluded$3","SpringContext","inherited","ctx","Provider","createElement","makeContext","Consumer","init","createContext","_context","SpringRef","_getProps","splice","index","useSprings","deps","propsFn","layoutId","forceUpdate","ctrls","updates","canFlushSync","prevLength","slice","declareUpdates","startIndex","endIndex","context","prevContext","hasContext","cb","x","useSpring","isFn","initSpringRef","useSpringRef","useTrail","propsArg","TransitionPhase","useTransition","data","propsRef","propsConfig","transitions","usedTransitions","prevTransitions","expired","clearTimeout","expirationId","getKeys","reused","phase","MOUNT","keyIndex","prevIndex","a","b","changes","prevPhase","propsDelay","ENTER","isLeave","LEAVE","UPDATE","_p","find","expiry","expiryMs","renderTransitions","render","Fragment","elem","str","nextKey","has","_excluded$2","Spring","_excluded$1","Trail","trails","_excluded","Transition","Interpolation","calc","_get","_dt","oldValue","checkIdle","becomeIdle","inputs","max","reduce","highest","isIdle","self"],"sources":["C:/Users/HARSH/Downloads/CHAT_APPLICATION-main (1)/CHAT_APPLICATION-main/node_modules/@react-spring/core/dist/react-spring-core.esm.js"],"sourcesContent":["import { eachProp, is, toArray, isAnimatedString, Globals, getFluidValue, useLayoutEffect, each, raf, flush, FluidValue, deprecateInterpolate, callFluidObservers, frameLoop, hasFluidValue, flushCalls, isEqual, getFluidObservers, addFluidObserver, removeFluidObserver, noop, useMemoOne, deprecateDirectCall, useForceUpdate, usePrev, useOnce, createInterpolator, createStringInterpolator } from '@react-spring/shared';\nexport { Globals, createInterpolator } from '@react-spring/shared';\nimport * as React from 'react';\nimport { useContext, useMemo, useRef, useState } from 'react';\nimport { getAnimated, AnimatedValue, getPayload, AnimatedString, getAnimatedType, setAnimated } from '@react-spring/animated';\nexport * from '@react-spring/types/animated';\nexport * from '@react-spring/types/interpolation';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction callProp(value, ...args) {\n  return is.fun(value) ? value(...args) : value;\n}\nconst matchProp = (value, key) => value === true || !!(key && value && (is.fun(value) ? value(key) : toArray(value).includes(key)));\nconst resolveProp = (prop, key) => is.obj(prop) ? key && prop[key] : prop;\nconst getDefaultProp = (props, key) => props.default === true ? props[key] : props.default ? props.default[key] : undefined;\n\nconst noopTransform = value => value;\n\nconst getDefaultProps = (props, transform = noopTransform) => {\n  let keys = DEFAULT_PROPS;\n\n  if (props.default && props.default !== true) {\n    props = props.default;\n    keys = Object.keys(props);\n  }\n\n  const defaults = {};\n\n  for (const key of keys) {\n    const value = transform(props[key], key);\n\n    if (!is.und(value)) {\n      defaults[key] = value;\n    }\n  }\n\n  return defaults;\n};\nconst DEFAULT_PROPS = ['config', 'onProps', 'onStart', 'onChange', 'onPause', 'onResume', 'onRest'];\nconst RESERVED_PROPS = {\n  config: 1,\n  from: 1,\n  to: 1,\n  ref: 1,\n  loop: 1,\n  reset: 1,\n  pause: 1,\n  cancel: 1,\n  reverse: 1,\n  immediate: 1,\n  default: 1,\n  delay: 1,\n  onProps: 1,\n  onStart: 1,\n  onChange: 1,\n  onPause: 1,\n  onResume: 1,\n  onRest: 1,\n  onResolve: 1,\n  items: 1,\n  trail: 1,\n  sort: 1,\n  expires: 1,\n  initial: 1,\n  enter: 1,\n  update: 1,\n  leave: 1,\n  children: 1,\n  onDestroyed: 1,\n  keys: 1,\n  callId: 1,\n  parentId: 1\n};\n\nfunction getForwardProps(props) {\n  const forward = {};\n  let count = 0;\n  eachProp(props, (value, prop) => {\n    if (!RESERVED_PROPS[prop]) {\n      forward[prop] = value;\n      count++;\n    }\n  });\n\n  if (count) {\n    return forward;\n  }\n}\n\nfunction inferTo(props) {\n  const to = getForwardProps(props);\n\n  if (to) {\n    const out = {\n      to\n    };\n    eachProp(props, (val, key) => key in to || (out[key] = val));\n    return out;\n  }\n\n  return _extends({}, props);\n}\nfunction computeGoal(value) {\n  value = getFluidValue(value);\n  return is.arr(value) ? value.map(computeGoal) : isAnimatedString(value) ? Globals.createStringInterpolator({\n    range: [0, 1],\n    output: [value, value]\n  })(1) : value;\n}\nfunction hasProps(props) {\n  for (const _ in props) return true;\n\n  return false;\n}\nfunction isAsyncTo(to) {\n  return is.fun(to) || is.arr(to) && is.obj(to[0]);\n}\nfunction detachRefs(ctrl, ref) {\n  var _ctrl$ref;\n\n  (_ctrl$ref = ctrl.ref) == null ? void 0 : _ctrl$ref.delete(ctrl);\n  ref == null ? void 0 : ref.delete(ctrl);\n}\nfunction replaceRef(ctrl, ref) {\n  if (ref && ctrl.ref !== ref) {\n    var _ctrl$ref2;\n\n    (_ctrl$ref2 = ctrl.ref) == null ? void 0 : _ctrl$ref2.delete(ctrl);\n    ref.add(ctrl);\n    ctrl.ref = ref;\n  }\n}\n\nfunction useChain(refs, timeSteps, timeFrame = 1000) {\n  useLayoutEffect(() => {\n    if (timeSteps) {\n      let prevDelay = 0;\n      each(refs, (ref, i) => {\n        const controllers = ref.current;\n\n        if (controllers.length) {\n          let delay = timeFrame * timeSteps[i];\n          if (isNaN(delay)) delay = prevDelay;else prevDelay = delay;\n          each(controllers, ctrl => {\n            each(ctrl.queue, props => {\n              const memoizedDelayProp = props.delay;\n\n              props.delay = key => delay + callProp(memoizedDelayProp || 0, key);\n            });\n            ctrl.start();\n          });\n        }\n      });\n    } else {\n      let p = Promise.resolve();\n      each(refs, ref => {\n        const controllers = ref.current;\n\n        if (controllers.length) {\n          const queues = controllers.map(ctrl => {\n            const q = ctrl.queue;\n            ctrl.queue = [];\n            return q;\n          });\n          p = p.then(() => {\n            each(controllers, (ctrl, i) => each(queues[i] || [], update => ctrl.queue.push(update)));\n            return Promise.all(ref.start());\n          });\n        }\n      });\n    }\n  });\n}\n\nconst config = {\n  default: {\n    tension: 170,\n    friction: 26\n  },\n  gentle: {\n    tension: 120,\n    friction: 14\n  },\n  wobbly: {\n    tension: 180,\n    friction: 12\n  },\n  stiff: {\n    tension: 210,\n    friction: 20\n  },\n  slow: {\n    tension: 280,\n    friction: 60\n  },\n  molasses: {\n    tension: 280,\n    friction: 120\n  }\n};\n\nconst linear = t => t;\n\nconst defaults = _extends({}, config.default, {\n  mass: 1,\n  damping: 1,\n  easing: linear,\n  clamp: false\n});\n\nclass AnimationConfig {\n  constructor() {\n    this.tension = void 0;\n    this.friction = void 0;\n    this.frequency = void 0;\n    this.damping = void 0;\n    this.mass = void 0;\n    this.velocity = 0;\n    this.restVelocity = void 0;\n    this.precision = void 0;\n    this.progress = void 0;\n    this.duration = void 0;\n    this.easing = void 0;\n    this.clamp = void 0;\n    this.bounce = void 0;\n    this.decay = void 0;\n    this.round = void 0;\n    Object.assign(this, defaults);\n  }\n\n}\nfunction mergeConfig(config, newConfig, defaultConfig) {\n  if (defaultConfig) {\n    defaultConfig = _extends({}, defaultConfig);\n    sanitizeConfig(defaultConfig, newConfig);\n    newConfig = _extends({}, defaultConfig, newConfig);\n  }\n\n  sanitizeConfig(config, newConfig);\n  Object.assign(config, newConfig);\n\n  for (const key in defaults) {\n    if (config[key] == null) {\n      config[key] = defaults[key];\n    }\n  }\n\n  let {\n    mass,\n    frequency,\n    damping\n  } = config;\n\n  if (!is.und(frequency)) {\n    if (frequency < 0.01) frequency = 0.01;\n    if (damping < 0) damping = 0;\n    config.tension = Math.pow(2 * Math.PI / frequency, 2) * mass;\n    config.friction = 4 * Math.PI * damping * mass / frequency;\n  }\n\n  return config;\n}\n\nfunction sanitizeConfig(config, props) {\n  if (!is.und(props.decay)) {\n    config.duration = undefined;\n  } else {\n    const isTensionConfig = !is.und(props.tension) || !is.und(props.friction);\n\n    if (isTensionConfig || !is.und(props.frequency) || !is.und(props.damping) || !is.und(props.mass)) {\n      config.duration = undefined;\n      config.decay = undefined;\n    }\n\n    if (isTensionConfig) {\n      config.frequency = undefined;\n    }\n  }\n}\n\nconst emptyArray = [];\nclass Animation {\n  constructor() {\n    this.changed = false;\n    this.values = emptyArray;\n    this.toValues = null;\n    this.fromValues = emptyArray;\n    this.to = void 0;\n    this.from = void 0;\n    this.config = new AnimationConfig();\n    this.immediate = false;\n  }\n\n}\n\nfunction scheduleProps(callId, {\n  key,\n  props,\n  defaultProps,\n  state,\n  actions\n}) {\n  return new Promise((resolve, reject) => {\n    var _props$cancel;\n\n    let delay;\n    let timeout;\n    let cancel = matchProp((_props$cancel = props.cancel) != null ? _props$cancel : defaultProps == null ? void 0 : defaultProps.cancel, key);\n\n    if (cancel) {\n      onStart();\n    } else {\n      if (!is.und(props.pause)) {\n        state.paused = matchProp(props.pause, key);\n      }\n\n      let pause = defaultProps == null ? void 0 : defaultProps.pause;\n\n      if (pause !== true) {\n        pause = state.paused || matchProp(pause, key);\n      }\n\n      delay = callProp(props.delay || 0, key);\n\n      if (pause) {\n        state.resumeQueue.add(onResume);\n        actions.pause();\n      } else {\n        actions.resume();\n        onResume();\n      }\n    }\n\n    function onPause() {\n      state.resumeQueue.add(onResume);\n      state.timeouts.delete(timeout);\n      timeout.cancel();\n      delay = timeout.time - raf.now();\n    }\n\n    function onResume() {\n      if (delay > 0) {\n        timeout = raf.setTimeout(onStart, delay);\n        state.pauseQueue.add(onPause);\n        state.timeouts.add(timeout);\n      } else {\n        onStart();\n      }\n    }\n\n    function onStart() {\n      state.pauseQueue.delete(onPause);\n      state.timeouts.delete(timeout);\n\n      if (callId <= (state.cancelId || 0)) {\n        cancel = true;\n      }\n\n      try {\n        actions.start(_extends({}, props, {\n          callId,\n          cancel\n        }), resolve);\n      } catch (err) {\n        reject(err);\n      }\n    }\n  });\n}\n\nconst getCombinedResult = (target, results) => results.length == 1 ? results[0] : results.some(result => result.cancelled) ? getCancelledResult(target.get()) : results.every(result => result.noop) ? getNoopResult(target.get()) : getFinishedResult(target.get(), results.every(result => result.finished));\nconst getNoopResult = value => ({\n  value,\n  noop: true,\n  finished: true,\n  cancelled: false\n});\nconst getFinishedResult = (value, finished, cancelled = false) => ({\n  value,\n  finished,\n  cancelled\n});\nconst getCancelledResult = value => ({\n  value,\n  cancelled: true,\n  finished: false\n});\n\nfunction runAsync(to, props, state, target) {\n  const {\n    callId,\n    parentId,\n    onRest\n  } = props;\n  const {\n    asyncTo: prevTo,\n    promise: prevPromise\n  } = state;\n\n  if (!parentId && to === prevTo && !props.reset) {\n    return prevPromise;\n  }\n\n  return state.promise = (async () => {\n    state.asyncId = callId;\n    state.asyncTo = to;\n    const defaultProps = getDefaultProps(props, (value, key) => key === 'onRest' ? undefined : value);\n    let preventBail;\n    let bail;\n    const bailPromise = new Promise((resolve, reject) => (preventBail = resolve, bail = reject));\n\n    const bailIfEnded = bailSignal => {\n      const bailResult = callId <= (state.cancelId || 0) && getCancelledResult(target) || callId !== state.asyncId && getFinishedResult(target, false);\n\n      if (bailResult) {\n        bailSignal.result = bailResult;\n        bail(bailSignal);\n        throw bailSignal;\n      }\n    };\n\n    const animate = (arg1, arg2) => {\n      const bailSignal = new BailSignal();\n      const skipAnimationSignal = new SkipAniamtionSignal();\n      return (async () => {\n        if (Globals.skipAnimation) {\n          stopAsync(state);\n          skipAnimationSignal.result = getFinishedResult(target, false);\n          bail(skipAnimationSignal);\n          throw skipAnimationSignal;\n        }\n\n        bailIfEnded(bailSignal);\n        const props = is.obj(arg1) ? _extends({}, arg1) : _extends({}, arg2, {\n          to: arg1\n        });\n        props.parentId = callId;\n        eachProp(defaultProps, (value, key) => {\n          if (is.und(props[key])) {\n            props[key] = value;\n          }\n        });\n        const result = await target.start(props);\n        bailIfEnded(bailSignal);\n\n        if (state.paused) {\n          await new Promise(resume => {\n            state.resumeQueue.add(resume);\n          });\n        }\n\n        return result;\n      })();\n    };\n\n    let result;\n\n    if (Globals.skipAnimation) {\n      stopAsync(state);\n      return getFinishedResult(target, false);\n    }\n\n    try {\n      let animating;\n\n      if (is.arr(to)) {\n        animating = (async queue => {\n          for (const props of queue) {\n            await animate(props);\n          }\n        })(to);\n      } else {\n          animating = Promise.resolve(to(animate, target.stop.bind(target)));\n        }\n\n      await Promise.all([animating.then(preventBail), bailPromise]);\n      result = getFinishedResult(target.get(), true, false);\n    } catch (err) {\n      if (err instanceof BailSignal) {\n        result = err.result;\n      } else if (err instanceof SkipAniamtionSignal) {\n        result = err.result;\n      } else {\n        throw err;\n      }\n    } finally {\n      if (callId == state.asyncId) {\n        state.asyncId = parentId;\n        state.asyncTo = parentId ? prevTo : undefined;\n        state.promise = parentId ? prevPromise : undefined;\n      }\n    }\n\n    if (is.fun(onRest)) {\n      raf.batchedUpdates(() => {\n        onRest(result, target, target.item);\n      });\n    }\n\n    return result;\n  })();\n}\nfunction stopAsync(state, cancelId) {\n  flush(state.timeouts, t => t.cancel());\n  state.pauseQueue.clear();\n  state.resumeQueue.clear();\n  state.asyncId = state.asyncTo = state.promise = undefined;\n  if (cancelId) state.cancelId = cancelId;\n}\nclass BailSignal extends Error {\n  constructor() {\n    super('An async animation has been interrupted. You see this error because you ' + 'forgot to use `await` or `.catch(...)` on its returned promise.');\n    this.result = void 0;\n  }\n\n}\nclass SkipAniamtionSignal extends Error {\n  constructor() {\n    super('SkipAnimationSignal');\n    this.result = void 0;\n  }\n\n}\n\nconst isFrameValue = value => value instanceof FrameValue;\nlet nextId$1 = 1;\nclass FrameValue extends FluidValue {\n  constructor(...args) {\n    super(...args);\n    this.id = nextId$1++;\n    this.key = void 0;\n    this._priority = 0;\n  }\n\n  get priority() {\n    return this._priority;\n  }\n\n  set priority(priority) {\n    if (this._priority != priority) {\n      this._priority = priority;\n\n      this._onPriorityChange(priority);\n    }\n  }\n\n  get() {\n    const node = getAnimated(this);\n    return node && node.getValue();\n  }\n\n  to(...args) {\n    return Globals.to(this, args);\n  }\n\n  interpolate(...args) {\n    deprecateInterpolate();\n    return Globals.to(this, args);\n  }\n\n  toJSON() {\n    return this.get();\n  }\n\n  observerAdded(count) {\n    if (count == 1) this._attach();\n  }\n\n  observerRemoved(count) {\n    if (count == 0) this._detach();\n  }\n\n  _attach() {}\n\n  _detach() {}\n\n  _onChange(value, idle = false) {\n    callFluidObservers(this, {\n      type: 'change',\n      parent: this,\n      value,\n      idle\n    });\n  }\n\n  _onPriorityChange(priority) {\n    if (!this.idle) {\n      frameLoop.sort(this);\n    }\n\n    callFluidObservers(this, {\n      type: 'priority',\n      parent: this,\n      priority\n    });\n  }\n\n}\n\nconst $P = Symbol.for('SpringPhase');\nconst HAS_ANIMATED = 1;\nconst IS_ANIMATING = 2;\nconst IS_PAUSED = 4;\nconst hasAnimated = target => (target[$P] & HAS_ANIMATED) > 0;\nconst isAnimating = target => (target[$P] & IS_ANIMATING) > 0;\nconst isPaused = target => (target[$P] & IS_PAUSED) > 0;\nconst setActiveBit = (target, active) => active ? target[$P] |= IS_ANIMATING | HAS_ANIMATED : target[$P] &= ~IS_ANIMATING;\nconst setPausedBit = (target, paused) => paused ? target[$P] |= IS_PAUSED : target[$P] &= ~IS_PAUSED;\n\nclass SpringValue extends FrameValue {\n  constructor(arg1, arg2) {\n    super();\n    this.key = void 0;\n    this.animation = new Animation();\n    this.queue = void 0;\n    this.defaultProps = {};\n    this._state = {\n      paused: false,\n      pauseQueue: new Set(),\n      resumeQueue: new Set(),\n      timeouts: new Set()\n    };\n    this._pendingCalls = new Set();\n    this._lastCallId = 0;\n    this._lastToId = 0;\n    this._memoizedDuration = 0;\n\n    if (!is.und(arg1) || !is.und(arg2)) {\n      const props = is.obj(arg1) ? _extends({}, arg1) : _extends({}, arg2, {\n        from: arg1\n      });\n\n      if (is.und(props.default)) {\n        props.default = true;\n      }\n\n      this.start(props);\n    }\n  }\n\n  get idle() {\n    return !(isAnimating(this) || this._state.asyncTo) || isPaused(this);\n  }\n\n  get goal() {\n    return getFluidValue(this.animation.to);\n  }\n\n  get velocity() {\n    const node = getAnimated(this);\n    return node instanceof AnimatedValue ? node.lastVelocity || 0 : node.getPayload().map(node => node.lastVelocity || 0);\n  }\n\n  get hasAnimated() {\n    return hasAnimated(this);\n  }\n\n  get isAnimating() {\n    return isAnimating(this);\n  }\n\n  get isPaused() {\n    return isPaused(this);\n  }\n\n  advance(dt) {\n    let idle = true;\n    let changed = false;\n    const anim = this.animation;\n    let {\n      config,\n      toValues\n    } = anim;\n    const payload = getPayload(anim.to);\n\n    if (!payload && hasFluidValue(anim.to)) {\n      toValues = toArray(getFluidValue(anim.to));\n    }\n\n    anim.values.forEach((node, i) => {\n      if (node.done) return;\n      const to = node.constructor == AnimatedString ? 1 : payload ? payload[i].lastPosition : toValues[i];\n      let finished = anim.immediate;\n      let position = to;\n\n      if (!finished) {\n        position = node.lastPosition;\n\n        if (config.tension <= 0) {\n          node.done = true;\n          return;\n        }\n\n        let elapsed = node.elapsedTime += dt;\n        const from = anim.fromValues[i];\n        const v0 = node.v0 != null ? node.v0 : node.v0 = is.arr(config.velocity) ? config.velocity[i] : config.velocity;\n        let velocity;\n\n        if (!is.und(config.duration)) {\n          let p = 1;\n\n          if (config.duration > 0) {\n            if (this._memoizedDuration !== config.duration) {\n              this._memoizedDuration = config.duration;\n\n              if (node.durationProgress > 0) {\n                node.elapsedTime = config.duration * node.durationProgress;\n                elapsed = node.elapsedTime += dt;\n              }\n            }\n\n            p = (config.progress || 0) + elapsed / this._memoizedDuration;\n            p = p > 1 ? 1 : p < 0 ? 0 : p;\n            node.durationProgress = p;\n          }\n\n          position = from + config.easing(p) * (to - from);\n          velocity = (position - node.lastPosition) / dt;\n          finished = p == 1;\n        } else if (config.decay) {\n            const decay = config.decay === true ? 0.998 : config.decay;\n            const e = Math.exp(-(1 - decay) * elapsed);\n            position = from + v0 / (1 - decay) * (1 - e);\n            finished = Math.abs(node.lastPosition - position) < 0.1;\n            velocity = v0 * e;\n          } else {\n              velocity = node.lastVelocity == null ? v0 : node.lastVelocity;\n              const precision = config.precision || (from == to ? 0.005 : Math.min(1, Math.abs(to - from) * 0.001));\n              const restVelocity = config.restVelocity || precision / 10;\n              const bounceFactor = config.clamp ? 0 : config.bounce;\n              const canBounce = !is.und(bounceFactor);\n              const isGrowing = from == to ? node.v0 > 0 : from < to;\n              let isMoving;\n              let isBouncing = false;\n              const step = 1;\n              const numSteps = Math.ceil(dt / step);\n\n              for (let n = 0; n < numSteps; ++n) {\n                isMoving = Math.abs(velocity) > restVelocity;\n\n                if (!isMoving) {\n                  finished = Math.abs(to - position) <= precision;\n\n                  if (finished) {\n                    break;\n                  }\n                }\n\n                if (canBounce) {\n                  isBouncing = position == to || position > to == isGrowing;\n\n                  if (isBouncing) {\n                    velocity = -velocity * bounceFactor;\n                    position = to;\n                  }\n                }\n\n                const springForce = -config.tension * 0.000001 * (position - to);\n                const dampingForce = -config.friction * 0.001 * velocity;\n                const acceleration = (springForce + dampingForce) / config.mass;\n                velocity = velocity + acceleration * step;\n                position = position + velocity * step;\n              }\n            }\n\n        node.lastVelocity = velocity;\n\n        if (Number.isNaN(position)) {\n          console.warn(`Got NaN while animating:`, this);\n          finished = true;\n        }\n      }\n\n      if (payload && !payload[i].done) {\n        finished = false;\n      }\n\n      if (finished) {\n        node.done = true;\n      } else {\n        idle = false;\n      }\n\n      if (node.setValue(position, config.round)) {\n        changed = true;\n      }\n    });\n    const node = getAnimated(this);\n    const currVal = node.getValue();\n\n    if (idle) {\n      const finalVal = getFluidValue(anim.to);\n\n      if ((currVal !== finalVal || changed) && !config.decay) {\n        node.setValue(finalVal);\n\n        this._onChange(finalVal);\n      } else if (changed && config.decay) {\n        this._onChange(currVal);\n      }\n\n      this._stop();\n    } else if (changed) {\n      this._onChange(currVal);\n    }\n  }\n\n  set(value) {\n    raf.batchedUpdates(() => {\n      this._stop();\n\n      this._focus(value);\n\n      this._set(value);\n    });\n    return this;\n  }\n\n  pause() {\n    this._update({\n      pause: true\n    });\n  }\n\n  resume() {\n    this._update({\n      pause: false\n    });\n  }\n\n  finish() {\n    if (isAnimating(this)) {\n      const {\n        to,\n        config\n      } = this.animation;\n      raf.batchedUpdates(() => {\n        this._onStart();\n\n        if (!config.decay) {\n          this._set(to, false);\n        }\n\n        this._stop();\n      });\n    }\n\n    return this;\n  }\n\n  update(props) {\n    const queue = this.queue || (this.queue = []);\n    queue.push(props);\n    return this;\n  }\n\n  start(to, arg2) {\n    let queue;\n\n    if (!is.und(to)) {\n      queue = [is.obj(to) ? to : _extends({}, arg2, {\n        to\n      })];\n    } else {\n      queue = this.queue || [];\n      this.queue = [];\n    }\n\n    return Promise.all(queue.map(props => this._update(props))).then(results => getCombinedResult(this, results));\n  }\n\n  stop(cancel) {\n    const {\n      to\n    } = this.animation;\n\n    this._focus(this.get());\n\n    stopAsync(this._state, cancel && this._lastCallId);\n    raf.batchedUpdates(() => this._stop(to, cancel));\n    return this;\n  }\n\n  reset() {\n    this._update({\n      reset: true\n    });\n  }\n\n  eventObserved(event) {\n    if (event.type == 'change') {\n      this._start();\n    } else if (event.type == 'priority') {\n      this.priority = event.priority + 1;\n    }\n  }\n\n  _prepareNode(props) {\n    const key = this.key || '';\n    let {\n      to,\n      from\n    } = props;\n    to = is.obj(to) ? to[key] : to;\n\n    if (to == null || isAsyncTo(to)) {\n      to = undefined;\n    }\n\n    from = is.obj(from) ? from[key] : from;\n\n    if (from == null) {\n      from = undefined;\n    }\n\n    const range = {\n      to,\n      from\n    };\n\n    if (!hasAnimated(this)) {\n      if (props.reverse) [to, from] = [from, to];\n      from = getFluidValue(from);\n\n      if (!is.und(from)) {\n        this._set(from);\n      } else if (!getAnimated(this)) {\n          this._set(to);\n        }\n    }\n\n    return range;\n  }\n\n  _update(_ref, isLoop) {\n    let props = _extends({}, _ref);\n\n    const {\n      key,\n      defaultProps\n    } = this;\n    if (props.default) Object.assign(defaultProps, getDefaultProps(props, (value, prop) => /^on/.test(prop) ? resolveProp(value, key) : value));\n    mergeActiveFn(this, props, 'onProps');\n    sendEvent(this, 'onProps', props, this);\n\n    const range = this._prepareNode(props);\n\n    if (Object.isFrozen(this)) {\n      throw Error('Cannot animate a `SpringValue` object that is frozen. ' + 'Did you forget to pass your component to `animated(...)` before animating its props?');\n    }\n\n    const state = this._state;\n    return scheduleProps(++this._lastCallId, {\n      key,\n      props,\n      defaultProps,\n      state,\n      actions: {\n        pause: () => {\n          if (!isPaused(this)) {\n            setPausedBit(this, true);\n            flushCalls(state.pauseQueue);\n            sendEvent(this, 'onPause', getFinishedResult(this, checkFinished(this, this.animation.to)), this);\n          }\n        },\n        resume: () => {\n          if (isPaused(this)) {\n            setPausedBit(this, false);\n\n            if (isAnimating(this)) {\n              this._resume();\n            }\n\n            flushCalls(state.resumeQueue);\n            sendEvent(this, 'onResume', getFinishedResult(this, checkFinished(this, this.animation.to)), this);\n          }\n        },\n        start: this._merge.bind(this, range)\n      }\n    }).then(result => {\n      if (props.loop && result.finished && !(isLoop && result.noop)) {\n        const nextProps = createLoopUpdate(props);\n\n        if (nextProps) {\n          return this._update(nextProps, true);\n        }\n      }\n\n      return result;\n    });\n  }\n\n  _merge(range, props, resolve) {\n    if (props.cancel) {\n      this.stop(true);\n      return resolve(getCancelledResult(this));\n    }\n\n    const hasToProp = !is.und(range.to);\n    const hasFromProp = !is.und(range.from);\n\n    if (hasToProp || hasFromProp) {\n      if (props.callId > this._lastToId) {\n        this._lastToId = props.callId;\n      } else {\n        return resolve(getCancelledResult(this));\n      }\n    }\n\n    const {\n      key,\n      defaultProps,\n      animation: anim\n    } = this;\n    const {\n      to: prevTo,\n      from: prevFrom\n    } = anim;\n    let {\n      to = prevTo,\n      from = prevFrom\n    } = range;\n\n    if (hasFromProp && !hasToProp && (!props.default || is.und(to))) {\n      to = from;\n    }\n\n    if (props.reverse) [to, from] = [from, to];\n    const hasFromChanged = !isEqual(from, prevFrom);\n\n    if (hasFromChanged) {\n      anim.from = from;\n    }\n\n    from = getFluidValue(from);\n    const hasToChanged = !isEqual(to, prevTo);\n\n    if (hasToChanged) {\n      this._focus(to);\n    }\n\n    const hasAsyncTo = isAsyncTo(props.to);\n    const {\n      config\n    } = anim;\n    const {\n      decay,\n      velocity\n    } = config;\n\n    if (hasToProp || hasFromProp) {\n      config.velocity = 0;\n    }\n\n    if (props.config && !hasAsyncTo) {\n      mergeConfig(config, callProp(props.config, key), props.config !== defaultProps.config ? callProp(defaultProps.config, key) : void 0);\n    }\n\n    let node = getAnimated(this);\n\n    if (!node || is.und(to)) {\n      return resolve(getFinishedResult(this, true));\n    }\n\n    const reset = is.und(props.reset) ? hasFromProp && !props.default : !is.und(from) && matchProp(props.reset, key);\n    const value = reset ? from : this.get();\n    const goal = computeGoal(to);\n    const isAnimatable = is.num(goal) || is.arr(goal) || isAnimatedString(goal);\n    const immediate = !hasAsyncTo && (!isAnimatable || matchProp(defaultProps.immediate || props.immediate, key));\n\n    if (hasToChanged) {\n      const nodeType = getAnimatedType(to);\n\n      if (nodeType !== node.constructor) {\n        if (immediate) {\n          node = this._set(goal);\n        } else throw Error(`Cannot animate between ${node.constructor.name} and ${nodeType.name}, as the \"to\" prop suggests`);\n      }\n    }\n\n    const goalType = node.constructor;\n    let started = hasFluidValue(to);\n    let finished = false;\n\n    if (!started) {\n      const hasValueChanged = reset || !hasAnimated(this) && hasFromChanged;\n\n      if (hasToChanged || hasValueChanged) {\n        finished = isEqual(computeGoal(value), goal);\n        started = !finished;\n      }\n\n      if (!isEqual(anim.immediate, immediate) && !immediate || !isEqual(config.decay, decay) || !isEqual(config.velocity, velocity)) {\n        started = true;\n      }\n    }\n\n    if (finished && isAnimating(this)) {\n      if (anim.changed && !reset) {\n        started = true;\n      } else if (!started) {\n          this._stop(prevTo);\n        }\n    }\n\n    if (!hasAsyncTo) {\n      if (started || hasFluidValue(prevTo)) {\n        anim.values = node.getPayload();\n        anim.toValues = hasFluidValue(to) ? null : goalType == AnimatedString ? [1] : toArray(goal);\n      }\n\n      if (anim.immediate != immediate) {\n        anim.immediate = immediate;\n\n        if (!immediate && !reset) {\n          this._set(prevTo);\n        }\n      }\n\n      if (started) {\n        const {\n          onRest\n        } = anim;\n        each(ACTIVE_EVENTS, type => mergeActiveFn(this, props, type));\n        const result = getFinishedResult(this, checkFinished(this, prevTo));\n        flushCalls(this._pendingCalls, result);\n\n        this._pendingCalls.add(resolve);\n\n        if (anim.changed) raf.batchedUpdates(() => {\n          anim.changed = !reset;\n          onRest == null ? void 0 : onRest(result, this);\n\n          if (reset) {\n            callProp(defaultProps.onRest, result);\n          } else {\n              anim.onStart == null ? void 0 : anim.onStart(result, this);\n            }\n        });\n      }\n    }\n\n    if (reset) {\n      this._set(value);\n    }\n\n    if (hasAsyncTo) {\n      resolve(runAsync(props.to, props, this._state, this));\n    } else if (started) {\n        this._start();\n      } else if (isAnimating(this) && !hasToChanged) {\n          this._pendingCalls.add(resolve);\n        } else {\n            resolve(getNoopResult(value));\n          }\n  }\n\n  _focus(value) {\n    const anim = this.animation;\n\n    if (value !== anim.to) {\n      if (getFluidObservers(this)) {\n        this._detach();\n      }\n\n      anim.to = value;\n\n      if (getFluidObservers(this)) {\n        this._attach();\n      }\n    }\n  }\n\n  _attach() {\n    let priority = 0;\n    const {\n      to\n    } = this.animation;\n\n    if (hasFluidValue(to)) {\n      addFluidObserver(to, this);\n\n      if (isFrameValue(to)) {\n        priority = to.priority + 1;\n      }\n    }\n\n    this.priority = priority;\n  }\n\n  _detach() {\n    const {\n      to\n    } = this.animation;\n\n    if (hasFluidValue(to)) {\n      removeFluidObserver(to, this);\n    }\n  }\n\n  _set(arg, idle = true) {\n    const value = getFluidValue(arg);\n\n    if (!is.und(value)) {\n      const oldNode = getAnimated(this);\n\n      if (!oldNode || !isEqual(value, oldNode.getValue())) {\n        const nodeType = getAnimatedType(value);\n\n        if (!oldNode || oldNode.constructor != nodeType) {\n          setAnimated(this, nodeType.create(value));\n        } else {\n          oldNode.setValue(value);\n        }\n\n        if (oldNode) {\n          raf.batchedUpdates(() => {\n            this._onChange(value, idle);\n          });\n        }\n      }\n    }\n\n    return getAnimated(this);\n  }\n\n  _onStart() {\n    const anim = this.animation;\n\n    if (!anim.changed) {\n      anim.changed = true;\n      sendEvent(this, 'onStart', getFinishedResult(this, checkFinished(this, anim.to)), this);\n    }\n  }\n\n  _onChange(value, idle) {\n    if (!idle) {\n      this._onStart();\n\n      callProp(this.animation.onChange, value, this);\n    }\n\n    callProp(this.defaultProps.onChange, value, this);\n\n    super._onChange(value, idle);\n  }\n\n  _start() {\n    const anim = this.animation;\n    getAnimated(this).reset(getFluidValue(anim.to));\n\n    if (!anim.immediate) {\n      anim.fromValues = anim.values.map(node => node.lastPosition);\n    }\n\n    if (!isAnimating(this)) {\n      setActiveBit(this, true);\n\n      if (!isPaused(this)) {\n        this._resume();\n      }\n    }\n  }\n\n  _resume() {\n    if (Globals.skipAnimation) {\n      this.finish();\n    } else {\n      frameLoop.start(this);\n    }\n  }\n\n  _stop(goal, cancel) {\n    if (isAnimating(this)) {\n      setActiveBit(this, false);\n      const anim = this.animation;\n      each(anim.values, node => {\n        node.done = true;\n      });\n\n      if (anim.toValues) {\n        anim.onChange = anim.onPause = anim.onResume = undefined;\n      }\n\n      callFluidObservers(this, {\n        type: 'idle',\n        parent: this\n      });\n      const result = cancel ? getCancelledResult(this.get()) : getFinishedResult(this.get(), checkFinished(this, goal != null ? goal : anim.to));\n      flushCalls(this._pendingCalls, result);\n\n      if (anim.changed) {\n        anim.changed = false;\n        sendEvent(this, 'onRest', result, this);\n      }\n    }\n  }\n\n}\n\nfunction checkFinished(target, to) {\n  const goal = computeGoal(to);\n  const value = computeGoal(target.get());\n  return isEqual(value, goal);\n}\n\nfunction createLoopUpdate(props, loop = props.loop, to = props.to) {\n  let loopRet = callProp(loop);\n\n  if (loopRet) {\n    const overrides = loopRet !== true && inferTo(loopRet);\n    const reverse = (overrides || props).reverse;\n    const reset = !overrides || overrides.reset;\n    return createUpdate(_extends({}, props, {\n      loop,\n      default: false,\n      pause: undefined,\n      to: !reverse || isAsyncTo(to) ? to : undefined,\n      from: reset ? props.from : undefined,\n      reset\n    }, overrides));\n  }\n}\nfunction createUpdate(props) {\n  const {\n    to,\n    from\n  } = props = inferTo(props);\n  const keys = new Set();\n  if (is.obj(to)) findDefined(to, keys);\n  if (is.obj(from)) findDefined(from, keys);\n  props.keys = keys.size ? Array.from(keys) : null;\n  return props;\n}\nfunction declareUpdate(props) {\n  const update = createUpdate(props);\n\n  if (is.und(update.default)) {\n    update.default = getDefaultProps(update);\n  }\n\n  return update;\n}\n\nfunction findDefined(values, keys) {\n  eachProp(values, (value, key) => value != null && keys.add(key));\n}\n\nconst ACTIVE_EVENTS = ['onStart', 'onRest', 'onChange', 'onPause', 'onResume'];\n\nfunction mergeActiveFn(target, props, type) {\n  target.animation[type] = props[type] !== getDefaultProp(props, type) ? resolveProp(props[type], target.key) : undefined;\n}\n\nfunction sendEvent(target, type, ...args) {\n  var _target$animation$typ, _target$animation, _target$defaultProps$, _target$defaultProps;\n\n  (_target$animation$typ = (_target$animation = target.animation)[type]) == null ? void 0 : _target$animation$typ.call(_target$animation, ...args);\n  (_target$defaultProps$ = (_target$defaultProps = target.defaultProps)[type]) == null ? void 0 : _target$defaultProps$.call(_target$defaultProps, ...args);\n}\n\nconst BATCHED_EVENTS = ['onStart', 'onChange', 'onRest'];\nlet nextId = 1;\nclass Controller {\n  constructor(props, flush) {\n    this.id = nextId++;\n    this.springs = {};\n    this.queue = [];\n    this.ref = void 0;\n    this._flush = void 0;\n    this._initialProps = void 0;\n    this._lastAsyncId = 0;\n    this._active = new Set();\n    this._changed = new Set();\n    this._started = false;\n    this._item = void 0;\n    this._state = {\n      paused: false,\n      pauseQueue: new Set(),\n      resumeQueue: new Set(),\n      timeouts: new Set()\n    };\n    this._events = {\n      onStart: new Map(),\n      onChange: new Map(),\n      onRest: new Map()\n    };\n    this._onFrame = this._onFrame.bind(this);\n\n    if (flush) {\n      this._flush = flush;\n    }\n\n    if (props) {\n      this.start(_extends({\n        default: true\n      }, props));\n    }\n  }\n\n  get idle() {\n    return !this._state.asyncTo && Object.values(this.springs).every(spring => spring.idle);\n  }\n\n  get item() {\n    return this._item;\n  }\n\n  set item(item) {\n    this._item = item;\n  }\n\n  get() {\n    const values = {};\n    this.each((spring, key) => values[key] = spring.get());\n    return values;\n  }\n\n  set(values) {\n    for (const key in values) {\n      const value = values[key];\n\n      if (!is.und(value)) {\n        this.springs[key].set(value);\n      }\n    }\n  }\n\n  update(props) {\n    if (props) {\n      this.queue.push(createUpdate(props));\n    }\n\n    return this;\n  }\n\n  start(props) {\n    let {\n      queue\n    } = this;\n\n    if (props) {\n      queue = toArray(props).map(createUpdate);\n    } else {\n      this.queue = [];\n    }\n\n    if (this._flush) {\n      return this._flush(this, queue);\n    }\n\n    prepareKeys(this, queue);\n    return flushUpdateQueue(this, queue);\n  }\n\n  stop(arg, keys) {\n    if (arg !== !!arg) {\n      keys = arg;\n    }\n\n    if (keys) {\n      const springs = this.springs;\n      each(toArray(keys), key => springs[key].stop(!!arg));\n    } else {\n      stopAsync(this._state, this._lastAsyncId);\n      this.each(spring => spring.stop(!!arg));\n    }\n\n    return this;\n  }\n\n  pause(keys) {\n    if (is.und(keys)) {\n      this.start({\n        pause: true\n      });\n    } else {\n      const springs = this.springs;\n      each(toArray(keys), key => springs[key].pause());\n    }\n\n    return this;\n  }\n\n  resume(keys) {\n    if (is.und(keys)) {\n      this.start({\n        pause: false\n      });\n    } else {\n      const springs = this.springs;\n      each(toArray(keys), key => springs[key].resume());\n    }\n\n    return this;\n  }\n\n  each(iterator) {\n    eachProp(this.springs, iterator);\n  }\n\n  _onFrame() {\n    const {\n      onStart,\n      onChange,\n      onRest\n    } = this._events;\n    const active = this._active.size > 0;\n    const changed = this._changed.size > 0;\n\n    if (active && !this._started || changed && !this._started) {\n      this._started = true;\n      flush(onStart, ([onStart, result]) => {\n        result.value = this.get();\n        onStart(result, this, this._item);\n      });\n    }\n\n    const idle = !active && this._started;\n    const values = changed || idle && onRest.size ? this.get() : null;\n\n    if (changed && onChange.size) {\n      flush(onChange, ([onChange, result]) => {\n        result.value = values;\n        onChange(result, this, this._item);\n      });\n    }\n\n    if (idle) {\n      this._started = false;\n      flush(onRest, ([onRest, result]) => {\n        result.value = values;\n        onRest(result, this, this._item);\n      });\n    }\n  }\n\n  eventObserved(event) {\n    if (event.type == 'change') {\n      this._changed.add(event.parent);\n\n      if (!event.idle) {\n        this._active.add(event.parent);\n      }\n    } else if (event.type == 'idle') {\n      this._active.delete(event.parent);\n    } else return;\n\n    raf.onFrame(this._onFrame);\n  }\n\n}\nfunction flushUpdateQueue(ctrl, queue) {\n  return Promise.all(queue.map(props => flushUpdate(ctrl, props))).then(results => getCombinedResult(ctrl, results));\n}\nasync function flushUpdate(ctrl, props, isLoop) {\n  const {\n    keys,\n    to,\n    from,\n    loop,\n    onRest,\n    onResolve\n  } = props;\n  const defaults = is.obj(props.default) && props.default;\n\n  if (loop) {\n    props.loop = false;\n  }\n\n  if (to === false) props.to = null;\n  if (from === false) props.from = null;\n  const asyncTo = is.arr(to) || is.fun(to) ? to : undefined;\n\n  if (asyncTo) {\n    props.to = undefined;\n    props.onRest = undefined;\n\n    if (defaults) {\n      defaults.onRest = undefined;\n    }\n  } else {\n      each(BATCHED_EVENTS, key => {\n        const handler = props[key];\n\n        if (is.fun(handler)) {\n          const queue = ctrl['_events'][key];\n\n          props[key] = ({\n            finished,\n            cancelled\n          }) => {\n            const result = queue.get(handler);\n\n            if (result) {\n              if (!finished) result.finished = false;\n              if (cancelled) result.cancelled = true;\n            } else {\n              queue.set(handler, {\n                value: null,\n                finished: finished || false,\n                cancelled: cancelled || false\n              });\n            }\n          };\n\n          if (defaults) {\n            defaults[key] = props[key];\n          }\n        }\n      });\n    }\n\n  const state = ctrl['_state'];\n\n  if (props.pause === !state.paused) {\n    state.paused = props.pause;\n    flushCalls(props.pause ? state.pauseQueue : state.resumeQueue);\n  } else if (state.paused) {\n      props.pause = true;\n    }\n\n  const promises = (keys || Object.keys(ctrl.springs)).map(key => ctrl.springs[key].start(props));\n  const cancel = props.cancel === true || getDefaultProp(props, 'cancel') === true;\n\n  if (asyncTo || cancel && state.asyncId) {\n    promises.push(scheduleProps(++ctrl['_lastAsyncId'], {\n      props,\n      state,\n      actions: {\n        pause: noop,\n        resume: noop,\n\n        start(props, resolve) {\n          if (cancel) {\n            stopAsync(state, ctrl['_lastAsyncId']);\n            resolve(getCancelledResult(ctrl));\n          } else {\n            props.onRest = onRest;\n            resolve(runAsync(asyncTo, props, state, ctrl));\n          }\n        }\n\n      }\n    }));\n  }\n\n  if (state.paused) {\n    await new Promise(resume => {\n      state.resumeQueue.add(resume);\n    });\n  }\n\n  const result = getCombinedResult(ctrl, await Promise.all(promises));\n\n  if (loop && result.finished && !(isLoop && result.noop)) {\n    const nextProps = createLoopUpdate(props, loop, to);\n\n    if (nextProps) {\n      prepareKeys(ctrl, [nextProps]);\n      return flushUpdate(ctrl, nextProps, true);\n    }\n  }\n\n  if (onResolve) {\n    raf.batchedUpdates(() => onResolve(result, ctrl, ctrl.item));\n  }\n\n  return result;\n}\nfunction getSprings(ctrl, props) {\n  const springs = _extends({}, ctrl.springs);\n\n  if (props) {\n    each(toArray(props), props => {\n      if (is.und(props.keys)) {\n        props = createUpdate(props);\n      }\n\n      if (!is.obj(props.to)) {\n        props = _extends({}, props, {\n          to: undefined\n        });\n      }\n\n      prepareSprings(springs, props, key => {\n        return createSpring(key);\n      });\n    });\n  }\n\n  setSprings(ctrl, springs);\n  return springs;\n}\nfunction setSprings(ctrl, springs) {\n  eachProp(springs, (spring, key) => {\n    if (!ctrl.springs[key]) {\n      ctrl.springs[key] = spring;\n      addFluidObserver(spring, ctrl);\n    }\n  });\n}\n\nfunction createSpring(key, observer) {\n  const spring = new SpringValue();\n  spring.key = key;\n\n  if (observer) {\n    addFluidObserver(spring, observer);\n  }\n\n  return spring;\n}\n\nfunction prepareSprings(springs, props, create) {\n  if (props.keys) {\n    each(props.keys, key => {\n      const spring = springs[key] || (springs[key] = create(key));\n      spring['_prepareNode'](props);\n    });\n  }\n}\n\nfunction prepareKeys(ctrl, queue) {\n  each(queue, props => {\n    prepareSprings(ctrl.springs, props, key => {\n      return createSpring(key, ctrl);\n    });\n  });\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst _excluded$3 = [\"children\"];\nconst SpringContext = _ref => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$3);\n\n  const inherited = useContext(ctx);\n  const pause = props.pause || !!inherited.pause,\n        immediate = props.immediate || !!inherited.immediate;\n  props = useMemoOne(() => ({\n    pause,\n    immediate\n  }), [pause, immediate]);\n  const {\n    Provider\n  } = ctx;\n  return React.createElement(Provider, {\n    value: props\n  }, children);\n};\nconst ctx = makeContext(SpringContext, {});\nSpringContext.Provider = ctx.Provider;\nSpringContext.Consumer = ctx.Consumer;\n\nfunction makeContext(target, init) {\n  Object.assign(target, React.createContext(init));\n  target.Provider._context = target;\n  target.Consumer._context = target;\n  return target;\n}\n\nconst SpringRef = () => {\n  const current = [];\n\n  const SpringRef = function SpringRef(props) {\n    deprecateDirectCall();\n    const results = [];\n    each(current, (ctrl, i) => {\n      if (is.und(props)) {\n        results.push(ctrl.start());\n      } else {\n        const update = _getProps(props, ctrl, i);\n\n        if (update) {\n          results.push(ctrl.start(update));\n        }\n      }\n    });\n    return results;\n  };\n\n  SpringRef.current = current;\n\n  SpringRef.add = function (ctrl) {\n    if (!current.includes(ctrl)) {\n      current.push(ctrl);\n    }\n  };\n\n  SpringRef.delete = function (ctrl) {\n    const i = current.indexOf(ctrl);\n    if (~i) current.splice(i, 1);\n  };\n\n  SpringRef.pause = function () {\n    each(current, ctrl => ctrl.pause(...arguments));\n    return this;\n  };\n\n  SpringRef.resume = function () {\n    each(current, ctrl => ctrl.resume(...arguments));\n    return this;\n  };\n\n  SpringRef.set = function (values) {\n    each(current, ctrl => ctrl.set(values));\n  };\n\n  SpringRef.start = function (props) {\n    const results = [];\n    each(current, (ctrl, i) => {\n      if (is.und(props)) {\n        results.push(ctrl.start());\n      } else {\n        const update = this._getProps(props, ctrl, i);\n\n        if (update) {\n          results.push(ctrl.start(update));\n        }\n      }\n    });\n    return results;\n  };\n\n  SpringRef.stop = function () {\n    each(current, ctrl => ctrl.stop(...arguments));\n    return this;\n  };\n\n  SpringRef.update = function (props) {\n    each(current, (ctrl, i) => ctrl.update(this._getProps(props, ctrl, i)));\n    return this;\n  };\n\n  const _getProps = function _getProps(arg, ctrl, index) {\n    return is.fun(arg) ? arg(index, ctrl) : arg;\n  };\n\n  SpringRef._getProps = _getProps;\n  return SpringRef;\n};\n\nfunction useSprings(length, props, deps) {\n  const propsFn = is.fun(props) && props;\n  if (propsFn && !deps) deps = [];\n  const ref = useMemo(() => propsFn || arguments.length == 3 ? SpringRef() : void 0, []);\n  const layoutId = useRef(0);\n  const forceUpdate = useForceUpdate();\n  const state = useMemo(() => ({\n    ctrls: [],\n    queue: [],\n\n    flush(ctrl, updates) {\n      const springs = getSprings(ctrl, updates);\n      const canFlushSync = layoutId.current > 0 && !state.queue.length && !Object.keys(springs).some(key => !ctrl.springs[key]);\n      return canFlushSync ? flushUpdateQueue(ctrl, updates) : new Promise(resolve => {\n        setSprings(ctrl, springs);\n        state.queue.push(() => {\n          resolve(flushUpdateQueue(ctrl, updates));\n        });\n        forceUpdate();\n      });\n    }\n\n  }), []);\n  const ctrls = useRef([...state.ctrls]);\n  const updates = [];\n  const prevLength = usePrev(length) || 0;\n  useMemo(() => {\n    each(ctrls.current.slice(length, prevLength), ctrl => {\n      detachRefs(ctrl, ref);\n      ctrl.stop(true);\n    });\n    ctrls.current.length = length;\n    declareUpdates(prevLength, length);\n  }, [length]);\n  useMemo(() => {\n    declareUpdates(0, Math.min(prevLength, length));\n  }, deps);\n\n  function declareUpdates(startIndex, endIndex) {\n    for (let i = startIndex; i < endIndex; i++) {\n      const ctrl = ctrls.current[i] || (ctrls.current[i] = new Controller(null, state.flush));\n      const update = propsFn ? propsFn(i, ctrl) : props[i];\n\n      if (update) {\n        updates[i] = declareUpdate(update);\n      }\n    }\n  }\n\n  const springs = ctrls.current.map((ctrl, i) => getSprings(ctrl, updates[i]));\n  const context = useContext(SpringContext);\n  const prevContext = usePrev(context);\n  const hasContext = context !== prevContext && hasProps(context);\n  useLayoutEffect(() => {\n    layoutId.current++;\n    state.ctrls = ctrls.current;\n    const {\n      queue\n    } = state;\n\n    if (queue.length) {\n      state.queue = [];\n      each(queue, cb => cb());\n    }\n\n    each(ctrls.current, (ctrl, i) => {\n      ref == null ? void 0 : ref.add(ctrl);\n\n      if (hasContext) {\n        ctrl.start({\n          default: context\n        });\n      }\n\n      const update = updates[i];\n\n      if (update) {\n        replaceRef(ctrl, update.ref);\n\n        if (ctrl.ref) {\n          ctrl.queue.push(update);\n        } else {\n          ctrl.start(update);\n        }\n      }\n    });\n  });\n  useOnce(() => () => {\n    each(state.ctrls, ctrl => ctrl.stop(true));\n  });\n  const values = springs.map(x => _extends({}, x));\n  return ref ? [values, ref] : values;\n}\n\nfunction useSpring(props, deps) {\n  const isFn = is.fun(props);\n  const [[values], ref] = useSprings(1, isFn ? props : [props], isFn ? deps || [] : deps);\n  return isFn || arguments.length == 2 ? [values, ref] : values;\n}\n\nconst initSpringRef = () => SpringRef();\n\nconst useSpringRef = () => useState(initSpringRef)[0];\n\nfunction useTrail(length, propsArg, deps) {\n  const propsFn = is.fun(propsArg) && propsArg;\n  if (propsFn && !deps) deps = [];\n  let reverse = true;\n  const result = useSprings(length, (i, ctrl) => {\n    const props = propsFn ? propsFn(i, ctrl) : propsArg;\n    reverse = reverse && props.reverse;\n    return props;\n  }, deps || [{}]);\n  const ref = result[1];\n  useLayoutEffect(() => {\n    each(ref.current, (ctrl, i) => {\n      const parent = ref.current[i + (reverse ? 1 : -1)];\n      if (parent) ctrl.start({\n        to: parent.springs\n      });\n    });\n  }, deps);\n\n  if (propsFn || arguments.length == 3) {\n    ref['_getProps'] = (propsArg, ctrl, i) => {\n      const props = is.fun(propsArg) ? propsArg(i, ctrl) : propsArg;\n\n      if (props) {\n        const parent = ref.current[i + (props.reverse ? 1 : -1)];\n        if (parent) props.to = parent.springs;\n        return props;\n      }\n    };\n\n    return result;\n  }\n\n  return result[0];\n}\n\nlet TransitionPhase;\n\n(function (TransitionPhase) {\n  TransitionPhase[\"MOUNT\"] = \"mount\";\n  TransitionPhase[\"ENTER\"] = \"enter\";\n  TransitionPhase[\"UPDATE\"] = \"update\";\n  TransitionPhase[\"LEAVE\"] = \"leave\";\n})(TransitionPhase || (TransitionPhase = {}));\n\nfunction useTransition(data, props, deps) {\n  const propsFn = is.fun(props) && props;\n  const {\n    reset,\n    sort,\n    trail = 0,\n    expires = true,\n    onDestroyed,\n    ref: propsRef,\n    config: propsConfig\n  } = propsFn ? propsFn() : props;\n  const ref = useMemo(() => propsFn || arguments.length == 3 ? SpringRef() : void 0, []);\n  const items = toArray(data);\n  const transitions = [];\n  const usedTransitions = useRef(null);\n  const prevTransitions = reset ? null : usedTransitions.current;\n  useLayoutEffect(() => {\n    usedTransitions.current = transitions;\n  });\n  useOnce(() => () => each(usedTransitions.current, t => {\n    if (t.expired) {\n      clearTimeout(t.expirationId);\n    }\n\n    detachRefs(t.ctrl, ref);\n    t.ctrl.stop(true);\n  }));\n  const keys = getKeys(items, propsFn ? propsFn() : props, prevTransitions);\n  const expired = reset && usedTransitions.current || [];\n  useLayoutEffect(() => each(expired, ({\n    ctrl,\n    item,\n    key\n  }) => {\n    detachRefs(ctrl, ref);\n    callProp(onDestroyed, item, key);\n  }));\n  const reused = [];\n  if (prevTransitions) each(prevTransitions, (t, i) => {\n    if (t.expired) {\n      clearTimeout(t.expirationId);\n      expired.push(t);\n    } else {\n      i = reused[i] = keys.indexOf(t.key);\n      if (~i) transitions[i] = t;\n    }\n  });\n  each(items, (item, i) => {\n    if (!transitions[i]) {\n      transitions[i] = {\n        key: keys[i],\n        item,\n        phase: TransitionPhase.MOUNT,\n        ctrl: new Controller()\n      };\n      transitions[i].ctrl.item = item;\n    }\n  });\n\n  if (reused.length) {\n    let i = -1;\n    const {\n      leave\n    } = propsFn ? propsFn() : props;\n    each(reused, (keyIndex, prevIndex) => {\n      const t = prevTransitions[prevIndex];\n\n      if (~keyIndex) {\n        i = transitions.indexOf(t);\n        transitions[i] = _extends({}, t, {\n          item: items[keyIndex]\n        });\n      } else if (leave) {\n        transitions.splice(++i, 0, t);\n      }\n    });\n  }\n\n  if (is.fun(sort)) {\n    transitions.sort((a, b) => sort(a.item, b.item));\n  }\n\n  let delay = -trail;\n  const forceUpdate = useForceUpdate();\n  const defaultProps = getDefaultProps(props);\n  const changes = new Map();\n  each(transitions, (t, i) => {\n    const key = t.key;\n    const prevPhase = t.phase;\n    const p = propsFn ? propsFn() : props;\n    let to;\n    let phase;\n    let propsDelay = callProp(p.delay || 0, key);\n\n    if (prevPhase == TransitionPhase.MOUNT) {\n      to = p.enter;\n      phase = TransitionPhase.ENTER;\n    } else {\n      const isLeave = keys.indexOf(key) < 0;\n\n      if (prevPhase != TransitionPhase.LEAVE) {\n        if (isLeave) {\n          to = p.leave;\n          phase = TransitionPhase.LEAVE;\n        } else if (to = p.update) {\n          phase = TransitionPhase.UPDATE;\n        } else return;\n      } else if (!isLeave) {\n        to = p.enter;\n        phase = TransitionPhase.ENTER;\n      } else return;\n    }\n\n    to = callProp(to, t.item, i);\n    to = is.obj(to) ? inferTo(to) : {\n      to\n    };\n\n    if (!to.config) {\n      const config = propsConfig || defaultProps.config;\n      to.config = callProp(config, t.item, i, phase);\n    }\n\n    delay += trail;\n\n    const payload = _extends({}, defaultProps, {\n      delay: propsDelay + delay,\n      ref: propsRef,\n      immediate: p.immediate,\n      reset: false\n    }, to);\n\n    if (phase == TransitionPhase.ENTER && is.und(payload.from)) {\n      const _p = propsFn ? propsFn() : props;\n\n      const from = is.und(_p.initial) || prevTransitions ? _p.from : _p.initial;\n      payload.from = callProp(from, t.item, i);\n    }\n\n    const {\n      onResolve\n    } = payload;\n\n    payload.onResolve = result => {\n      callProp(onResolve, result);\n      const transitions = usedTransitions.current;\n      const t = transitions.find(t => t.key === key);\n      if (!t) return;\n\n      if (result.cancelled && t.phase != TransitionPhase.UPDATE) {\n        return;\n      }\n\n      if (t.ctrl.idle) {\n        const idle = transitions.every(t => t.ctrl.idle);\n\n        if (t.phase == TransitionPhase.LEAVE) {\n          const expiry = callProp(expires, t.item);\n\n          if (expiry !== false) {\n            const expiryMs = expiry === true ? 0 : expiry;\n            t.expired = true;\n\n            if (!idle && expiryMs > 0) {\n              if (expiryMs <= 0x7fffffff) t.expirationId = setTimeout(forceUpdate, expiryMs);\n              return;\n            }\n          }\n        }\n\n        if (idle && transitions.some(t => t.expired)) {\n          forceUpdate();\n        }\n      }\n    };\n\n    const springs = getSprings(t.ctrl, payload);\n    changes.set(t, {\n      phase,\n      springs,\n      payload\n    });\n  });\n  const context = useContext(SpringContext);\n  const prevContext = usePrev(context);\n  const hasContext = context !== prevContext && hasProps(context);\n  useLayoutEffect(() => {\n    if (hasContext) each(transitions, t => {\n      t.ctrl.start({\n        default: context\n      });\n    });\n  }, [context]);\n  useLayoutEffect(() => {\n    each(changes, ({\n      phase,\n      payload\n    }, t) => {\n      const {\n        ctrl\n      } = t;\n      t.phase = phase;\n      ref == null ? void 0 : ref.add(ctrl);\n\n      if (hasContext && phase == TransitionPhase.ENTER) {\n        ctrl.start({\n          default: context\n        });\n      }\n\n      if (payload) {\n        replaceRef(ctrl, payload.ref);\n\n        if (ctrl.ref) {\n          ctrl.update(payload);\n        } else {\n          ctrl.start(payload);\n        }\n      }\n    });\n  }, reset ? void 0 : deps);\n\n  const renderTransitions = render => React.createElement(React.Fragment, null, transitions.map((t, i) => {\n    const {\n      springs\n    } = changes.get(t) || t.ctrl;\n    const elem = render(_extends({}, springs), t.item, t, i);\n    return elem && elem.type ? React.createElement(elem.type, _extends({}, elem.props, {\n      key: is.str(t.key) || is.num(t.key) ? t.key : t.ctrl.id,\n      ref: elem.ref\n    })) : elem;\n  }));\n\n  return ref ? [renderTransitions, ref] : renderTransitions;\n}\nlet nextKey = 1;\n\nfunction getKeys(items, {\n  key,\n  keys = key\n}, prevTransitions) {\n  if (keys === null) {\n    const reused = new Set();\n    return items.map(item => {\n      const t = prevTransitions && prevTransitions.find(t => t.item === item && t.phase !== TransitionPhase.LEAVE && !reused.has(t));\n\n      if (t) {\n        reused.add(t);\n        return t.key;\n      }\n\n      return nextKey++;\n    });\n  }\n\n  return is.und(keys) ? items : is.fun(keys) ? items.map(keys) : toArray(keys);\n}\n\nconst _excluded$2 = [\"children\"];\nfunction Spring(_ref) {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$2);\n\n  return children(useSpring(props));\n}\n\nconst _excluded$1 = [\"items\", \"children\"];\nfunction Trail(_ref) {\n  let {\n    items,\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n\n  const trails = useTrail(items.length, props);\n  return items.map((item, index) => {\n    const result = children(item, index);\n    return is.fun(result) ? result(trails[index]) : result;\n  });\n}\n\nconst _excluded = [\"items\", \"children\"];\nfunction Transition(_ref) {\n  let {\n    items,\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return useTransition(items, props)(children);\n}\n\nclass Interpolation extends FrameValue {\n  constructor(source, args) {\n    super();\n    this.key = void 0;\n    this.idle = true;\n    this.calc = void 0;\n    this._active = new Set();\n    this.source = source;\n    this.calc = createInterpolator(...args);\n\n    const value = this._get();\n\n    const nodeType = getAnimatedType(value);\n    setAnimated(this, nodeType.create(value));\n  }\n\n  advance(_dt) {\n    const value = this._get();\n\n    const oldValue = this.get();\n\n    if (!isEqual(value, oldValue)) {\n      getAnimated(this).setValue(value);\n\n      this._onChange(value, this.idle);\n    }\n\n    if (!this.idle && checkIdle(this._active)) {\n      becomeIdle(this);\n    }\n  }\n\n  _get() {\n    const inputs = is.arr(this.source) ? this.source.map(getFluidValue) : toArray(getFluidValue(this.source));\n    return this.calc(...inputs);\n  }\n\n  _start() {\n    if (this.idle && !checkIdle(this._active)) {\n      this.idle = false;\n      each(getPayload(this), node => {\n        node.done = false;\n      });\n\n      if (Globals.skipAnimation) {\n        raf.batchedUpdates(() => this.advance());\n        becomeIdle(this);\n      } else {\n        frameLoop.start(this);\n      }\n    }\n  }\n\n  _attach() {\n    let priority = 1;\n    each(toArray(this.source), source => {\n      if (hasFluidValue(source)) {\n        addFluidObserver(source, this);\n      }\n\n      if (isFrameValue(source)) {\n        if (!source.idle) {\n          this._active.add(source);\n        }\n\n        priority = Math.max(priority, source.priority + 1);\n      }\n    });\n    this.priority = priority;\n\n    this._start();\n  }\n\n  _detach() {\n    each(toArray(this.source), source => {\n      if (hasFluidValue(source)) {\n        removeFluidObserver(source, this);\n      }\n    });\n\n    this._active.clear();\n\n    becomeIdle(this);\n  }\n\n  eventObserved(event) {\n    if (event.type == 'change') {\n      if (event.idle) {\n        this.advance();\n      } else {\n        this._active.add(event.parent);\n\n        this._start();\n      }\n    } else if (event.type == 'idle') {\n        this._active.delete(event.parent);\n      } else if (event.type == 'priority') {\n          this.priority = toArray(this.source).reduce((highest, parent) => Math.max(highest, (isFrameValue(parent) ? parent.priority : 0) + 1), 0);\n        }\n  }\n\n}\n\nfunction isIdle(source) {\n  return source.idle !== false;\n}\n\nfunction checkIdle(active) {\n  return !active.size || Array.from(active).every(isIdle);\n}\n\nfunction becomeIdle(self) {\n  if (!self.idle) {\n    self.idle = true;\n    each(getPayload(self), node => {\n      node.done = true;\n    });\n    callFluidObservers(self, {\n      type: 'idle',\n      parent: self\n    });\n  }\n}\n\nconst to = (source, ...args) => new Interpolation(source, args);\nconst interpolate = (source, ...args) => (deprecateInterpolate(), new Interpolation(source, args));\n\nGlobals.assign({\n  createStringInterpolator,\n  to: (source, args) => new Interpolation(source, args)\n});\nconst update = frameLoop.advance;\n\nexport { BailSignal, Controller, FrameValue, Interpolation, Spring, SpringContext, SpringRef, SpringValue, Trail, Transition, config, inferTo, interpolate, to, update, useChain, useSpring, useSpringRef, useSprings, useTrail, useTransition };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}