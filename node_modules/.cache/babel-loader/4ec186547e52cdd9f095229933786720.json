{"ast":null,"code":"import React from 'react';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar W3CWebSocket = require('websocket').w3cwebsocket;\n\nvar WebSocket = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(WebSocket, _React$Component);\n\n  function WebSocket(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      ws: new W3CWebSocket(_this.props.url),\n      attempts: 1\n    };\n    _this.sendMessage = _this.sendMessage.bind(_assertThisInitialized(_this));\n    _this.setupWebsocket = _this.setupWebsocket.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = WebSocket.prototype;\n\n  _proto.logging = function logging(logline) {\n    if (this.props.debug === true) {\n      console.log(logline);\n    }\n  };\n\n  _proto.generateInterval = function generateInterval(k) {\n    if (this.props.reconnectIntervalInMilliSeconds > 0) {\n      return this.props.reconnectIntervalInMilliSeconds;\n    }\n\n    return Math.min(30, Math.pow(2, k) - 1) * 1000;\n  };\n\n  _proto.setupWebsocket = function setupWebsocket() {\n    var _this2 = this;\n\n    var websocket = this.state.ws;\n\n    websocket.onopen = function () {\n      _this2.logging('Websocket connected...');\n\n      if (typeof _this2.props.onOpen === 'function') _this2.props.onOpen();\n    };\n\n    websocket.onerror = function (e) {\n      if (typeof _this2.props.onError === 'function') _this2.props.onError(e);\n    };\n\n    websocket.onmessage = function (evt) {\n      _this2.props.onMessage(evt.data);\n    };\n\n    this.shouldReconnect = this.props.reconnect;\n\n    websocket.onclose = function (evt) {\n      _this2.logging(\"Websocket disconnected,the reason: \" + evt.reason + \",the code: \" + evt.code);\n\n      if (typeof _this2.props.onClose === 'function') _this2.props.onClose(evt.code, evt.reason);\n\n      if (_this2.shouldReconnect) {\n        var time = _this2.generateInterval(_this2.state.attempts);\n\n        _this2.timeoutID = setTimeout(function () {\n          _this2.setState({\n            attempts: _this2.state.attempts + 1\n          });\n\n          _this2.setState({\n            ws: new W3CWebSocket(_this2.props.url)\n          });\n\n          _this2.setupWebsocket();\n        }, time);\n      }\n    };\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    var childRef = this.props.childRef;\n    childRef && childRef(this);\n    this.setupWebsocket();\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    var childRef = this.props.childRef;\n    childRef && childRef(undefined);\n    this.shouldReconnect = false;\n    clearTimeout(this.timeoutID);\n    var websocket = this.state.ws;\n    websocket.close();\n  };\n\n  _proto.sendMessage = function sendMessage(message) {\n    var websocket = this.state.ws;\n    websocket.send(message);\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  };\n\n  return WebSocket;\n}(React.Component);\n\nexport { WebSocket };","map":{"version":3,"sources":["../src/index.js"],"names":["W3CWebSocket","require","WebSocket","React","Component","ws","attempts","logging","console","generateInterval","Math","setupWebsocket","websocket","evt","time","setTimeout","componentDidMount","childRef","componentWillUnmount","clearTimeout","sendMessage","render"],"mappings":"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","sourcesContent":["import React from 'react'\n\nvar W3CWebSocket = require('websocket').w3cwebsocket;\n\nclass WebSocket extends React.Component {constructor(props) {\n  super(props);\n    this.state = {\n      ws: new W3CWebSocket(this.props.url),\n      attempts: 1\n    };\n    this.sendMessage = this.sendMessage.bind(this);\n    this.setupWebsocket = this.setupWebsocket.bind(this);\n  }\n\n  logging(logline) {\n    if (this.props.debug === true) {\n      console.log(logline);\n    }\n  }\n\n  generateInterval(k) {\n    if (this.props.reconnectIntervalInMilliSeconds > 0) {\n      return this.props.reconnectIntervalInMilliSeconds;\n    }\n    return Math.min(30, Math.pow(2, k) - 1) * 1000;\n  }\n\n  setupWebsocket() {\n    let websocket = this.state.ws;\n\n    websocket.onopen = () => {\n      this.logging('Websocket connected...');\n      if (typeof this.props.onOpen === 'function') this.props.onOpen();\n    };\n\n    websocket.onerror = e => {\n      if (typeof this.props.onError === 'function') this.props.onError(e);\n    };\n\n    websocket.onmessage = evt => {\n      this.props.onMessage(evt.data);\n    };\n\n    this.shouldReconnect = this.props.reconnect;\n    websocket.onclose = evt => {\n      this.logging(\n        `Websocket disconnected,the reason: ${evt.reason},the code: ${evt.code}`\n      );\n      if (typeof this.props.onClose === 'function')\n        this.props.onClose(evt.code, evt.reason);\n      if (this.shouldReconnect) {\n        let time = this.generateInterval(this.state.attempts);\n        this.timeoutID = setTimeout(() => {\n          this.setState({ attempts: this.state.attempts + 1 });\n          this.setState({ ws: new W3CWebSocket(this.props.url) });\n          this.setupWebsocket();\n        }, time);\n      }\n    };\n  }\n\n  componentDidMount() {\n    const { childRef } = this.props;\n    childRef && childRef(this);\n\n    this.setupWebsocket();\n  }\n\n  componentWillUnmount() {\n    const { childRef } = this.props;\n    childRef && childRef(undefined);\n\n    this.shouldReconnect = false;\n    clearTimeout(this.timeoutID);\n\n    let websocket = this.state.ws;\n    websocket.close();\n  }\n\n  sendMessage(message) {\n    let websocket = this.state.ws;\n    websocket.send(message);\n  }\n\n  render() {\n    return <div></div>;\n  }\n}\n\nexport {\n  WebSocket\n}"]},"metadata":{},"sourceType":"module"}